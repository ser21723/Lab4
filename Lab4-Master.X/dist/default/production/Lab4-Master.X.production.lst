

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 23:46:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0008                     	;# 
   171     0009                     	;# 
   172     000A                     	;# 
   173     000B                     	;# 
   174     000C                     	;# 
   175     000D                     	;# 
   176     000E                     	;# 
   177     000E                     	;# 
   178     000F                     	;# 
   179     0010                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0013                     	;# 
   183     0014                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001B                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     0081                     	;# 
   198     0085                     	;# 
   199     0086                     	;# 
   200     0087                     	;# 
   201     0088                     	;# 
   202     0089                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     008F                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0097                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009A                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     0105                     	;# 
   226     0107                     	;# 
   227     0108                     	;# 
   228     0109                     	;# 
   229     010C                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0185                     	;# 
   235     0187                     	;# 
   236     0188                     	;# 
   237     0189                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240     0000                     	;# 
   241     0001                     	;# 
   242     0002                     	;# 
   243     0003                     	;# 
   244     0004                     	;# 
   245     0005                     	;# 
   246     0006                     	;# 
   247     0007                     	;# 
   248     0008                     	;# 
   249     0009                     	;# 
   250     000A                     	;# 
   251     000B                     	;# 
   252     000C                     	;# 
   253     000D                     	;# 
   254     000E                     	;# 
   255     000E                     	;# 
   256     000F                     	;# 
   257     0010                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0015                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001B                     	;# 
   271     001C                     	;# 
   272     001D                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     0081                     	;# 
   276     0085                     	;# 
   277     0086                     	;# 
   278     0087                     	;# 
   279     0088                     	;# 
   280     0089                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0091                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     0105                     	;# 
   304     0107                     	;# 
   305     0108                     	;# 
   306     0109                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     0185                     	;# 
   313     0187                     	;# 
   314     0188                     	;# 
   315     0189                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     008F                     	;# 
   363     0090                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0095                     	;# 
   371     0096                     	;# 
   372     0097                     	;# 
   373     0098                     	;# 
   374     0099                     	;# 
   375     009A                     	;# 
   376     009B                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     0105                     	;# 
   382     0107                     	;# 
   383     0108                     	;# 
   384     0109                     	;# 
   385     010C                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     010F                     	;# 
   390     0185                     	;# 
   391     0187                     	;# 
   392     0188                     	;# 
   393     0189                     	;# 
   394     018C                     	;# 
   395     018D                     	;# 
   396                           
   397                           	psect	idataBANK0
   398     00AC                     __pidataBANK0:
   399                           
   400                           ;initializer for _Hora
   401     00AC  3430               	retlw	48
   402     00AD  3430               	retlw	48
   403     00AE  3430               	retlw	48
   404     00AF  3430               	retlw	48
   405     00B0  3430               	retlw	48
   406     00B1  3430               	retlw	48
   407     00B2  3400               	retlw	0
   408                           
   409                           ;initializer for _Fecha
   410     00B3  3430               	retlw	48
   411     00B4  3430               	retlw	48
   412     00B5  3430               	retlw	48
   413     00B6  3430               	retlw	48
   414     00B7  3430               	retlw	48
   415     00B8  3430               	retlw	48
   416     00B9  3400               	retlw	0
   417                           
   418                           	psect	strings
   419     0003                     __pstrings:
   420     0003                     stringtab:
   421     0003                     __stringtab:
   422                           
   423                           ;	String table - string pointers are 1 byte each
   424     0003  1BFF               	btfsc	btemp+1,7
   425     0004  280D               	ljmp	stringcode
   426     0005  1383               	bcf	3,7
   427     0006  187F               	btfsc	btemp+1,0
   428     0007  1783               	bsf	3,7
   429     0008  0800               	movf	0,w
   430     0009  0A84               	incf	4,f
   431     000A  1903               	skipnz
   432     000B  0AFF               	incf	btemp+1,f
   433     000C  0008               	return
   434     000D                     stringcode:
   435     000D                     stringdir:
   436     000D  3000               	movlw	high stringdir
   437     000E  008A               	movwf	10
   438     000F  0804               	movf	4,w
   439     0010  0A84               	incf	4,f
   440     0011  0782               	addwf	2,f
   441     0012                     __stringbase:
   442     0012  3400               	retlw	0
   443     0013                     __end_of__stringtab:
   444     0013                     _dpowers:
   445     0013  3401               	retlw	1
   446     0014  3400               	retlw	0
   447     0015  340A               	retlw	10
   448     0016  3400               	retlw	0
   449     0017  3464               	retlw	100
   450     0018  3400               	retlw	0
   451     0019  34E8               	retlw	232
   452     001A  3403               	retlw	3
   453     001B  3410               	retlw	16
   454     001C  3427               	retlw	39
   455     001D                     __end_of_dpowers:
   456     0008                     _PORTDbits	set	8
   457     0013                     _SSPBUF	set	19
   458     000C                     _PIR1bits	set	12
   459     0014                     _SSPCON	set	20
   460     0009                     _PORTEbits	set	9
   461     0009                     _PORTE	set	9
   462     0008                     _PORTD	set	8
   463     0006                     _PORTB	set	6
   464     0088                     _TRISDbits	set	136
   465     0091                     _SSPCON2bits	set	145
   466     0093                     _SSPADD	set	147
   467     0091                     _SSPCON2	set	145
   468     0094                     _SSPSTAT	set	148
   469     0087                     _TRISCbits	set	135
   470     008F                     _OSCCONbits	set	143
   471     0089                     _TRISE	set	137
   472     0088                     _TRISD	set	136
   473     0086                     _TRISB	set	134
   474     009F                     _ADCON1	set	159
   475     0189                     _ANSELH	set	393
   476     0188                     _ANSEL	set	392
   477     001D                     STR_2:
   478     001D  3420               	retlw	32	;' '
   479     001E  3425               	retlw	37	;'%'
   480     001F  3475               	retlw	117	;'u'
   481     0020  3420               	retlw	32	;' '
   482     0021  3420               	retlw	32	;' '
   483     0022  3400               	retlw	0
   484     0023                     STR_1:
   485     0023  3441               	retlw	65	;'A'
   486     0024  3444               	retlw	68	;'D'
   487     0025  3443               	retlw	67	;'C'
   488     0026  343A               	retlw	58	;':'
   489     0027  3400               	retlw	0
   490     0028                     STR_3:
   491     0028  3425               	retlw	37	;'%'
   492     0029  3475               	retlw	117	;'u'
   493     002A  3400               	retlw	0
   494                           
   495                           	psect	cinit
   496     07E6                     start_initialization:	
   497                           ; #config settings
   498                           
   499     07E6                     __initialization:
   500                           
   501                           ; Initialize objects allocated to BANK0
   502     07E6  1383               	bcf	3,7	;select IRP bank0
   503     07E7  305F               	movlw	low (__pdataBANK0+14)
   504     07E8  00FD               	movwf	btemp+-1
   505     07E9  3000               	movlw	high __pidataBANK0
   506     07EA  00FE               	movwf	btemp
   507     07EB  30AC               	movlw	low __pidataBANK0
   508     07EC  00FF               	movwf	btemp+1
   509     07ED  3051               	movlw	low __pdataBANK0
   510     07EE  0084               	movwf	4
   511     07EF  120A  118A  20D0  120A  118A  	fcall	init_ram0
   512                           
   513                           ; Clear objects allocated to BANK0
   514     07F4  3020               	movlw	low __pbssBANK0
   515     07F5  0084               	movwf	4
   516     07F6  303D               	movlw	low (__pbssBANK0+29)
   517     07F7  120A  118A  204A  120A  118A  	fcall	clear_ram0
   518     07FC                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521     07FC                     __end_of__initialization:
   522     07FC  0183               	clrf	3
   523     07FD  120A  118A  2F18   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	bssBANK0
   526     0020                     __pbssBANK0:
   527     0020                     _caso:
   528     0020                     	ds	2
   529     0022                     _anio:
   530     0022                     	ds	1
   531     0023                     _mes:
   532     0023                     	ds	1
   533     0024                     _dia:
   534     0024                     	ds	1
   535     0025                     _hora:
   536     0025                     	ds	1
   537     0026                     _min:
   538     0026                     	ds	1
   539     0027                     _sec:
   540     0027                     	ds	1
   541     0028                     _ADC:
   542     0028                     	ds	1
   543     0029                     _buffer:
   544     0029                     	ds	20
   545                           
   546                           	psect	dataBANK0
   547     0051                     __pdataBANK0:
   548     0051                     _Hora:
   549     0051                     	ds	7
   550     0058                     _Fecha:
   551     0058                     	ds	7
   552                           
   553                           	psect	inittext
   554     00CC                     init_fetch0:	
   555                           ;	Called with low address in FSR and high address in W
   556                           
   557     00CC  087E               	movf	btemp,w
   558     00CD  008A               	movwf	10
   559     00CE  087F               	movf	btemp+1,w
   560     00CF  0082               	movwf	2
   561     00D0                     init_ram0:	
   562                           ;Called with:
   563                           ;	high address of idata address in btemp 
   564                           ;	low address of idata address in btemp+1 
   565                           ;	low address of data in FSR
   566                           ;	high address + 1 of data in btemp-1
   567                           
   568     00D0  120A  118A  20CC  120A  118A  	fcall	init_fetch0
   569     00D5  0080               	movwf	0
   570     00D6  0A84               	incf	4,f
   571     00D7  0804               	movf	4,w
   572     00D8  067D               	xorwf	btemp+-1,w
   573     00D9  1903               	btfsc	3,2
   574     00DA  3400               	retlw	0
   575     00DB  0AFF               	incf	btemp+1,f
   576     00DC  1903               	btfsc	3,2
   577     00DD  0AFE               	incf	btemp,f
   578     00DE  28D0               	goto	init_ram0
   579                           
   580                           	psect	clrtext
   581     004A                     clear_ram0:	
   582                           ;	Called with FSR containing the base address, and
   583                           ;	W with the last address+1
   584                           
   585     004A  0064               	clrwdt	;clear the watchdog before getting into this loop
   586     004B                     clrloop0:
   587     004B  0180               	clrf	0	;clear RAM location pointed to by FSR
   588     004C  0A84               	incf	4,f	;increment pointer
   589     004D  0604               	xorwf	4,w	;XOR with final address
   590     004E  1903               	btfsc	3,2	;have we reached the end yet?
   591     004F  3400               	retlw	0	;all done for this memory range, return
   592     0050  0604               	xorwf	4,w	;XOR again to restore value
   593     0051  284B               	goto	clrloop0	;do the next byte
   594                           
   595                           	psect	cstackCOMMON
   596     0070                     __pcstackCOMMON:
   597     0070                     ?_isdigit:
   598     0070                     ?_setup:	
   599                           ; 1 bit 
   600                           
   601     0070                     ?_Lcd_Init:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_Lcd_Clear:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_convertirHora:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ??_convertirHora:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_enviar_hora:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_convertirFecha:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ??_convertirFecha:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_enviar_fecha:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_I2C_Start:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ??_I2C_Start:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ??_I2C_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_I2C_Read:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ??_I2C_Read:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_I2C_Stop:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ??_I2C_Stop:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_leer_hora:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_mostrar_hora:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_leer_fecha:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_mostrar_fecha:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_configuracion:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_I2C_Init_Master:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ??_I2C_Init_Master:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_I2C_Restart:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ??_I2C_Restart:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_I2C_Ack:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ??_I2C_Ack:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?_I2C_Nack:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ??_I2C_Nack:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_Lcd_Write_Char:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ??_isdigit:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ?_main:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     ?_Lcd_Port:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ??_Lcd_Port:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ?_Lcd_Cmd:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     0070                     ?_I2C_Write:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     0070                     ?___wmul:	
   707                           ; 2 bytes @ 0x0
   708                           
   709     0070                     ?___lwdiv:	
   710                           ; 2 bytes @ 0x0
   711                           
   712     0070                     I2C_Init_Master@sp_i2c:	
   713                           ; 2 bytes @ 0x0
   714                           
   715     0070                     I2C_Write@data:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     Lcd_Port@a:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     _isdigit$888:	
   722                           ; 1 bytes @ 0x0
   723                           
   724     0070                     ___wmul@multiplier:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ___lwdiv@divisor:	
   728                           ; 2 bytes @ 0x0
   729                           
   730                           
   731                           ; 2 bytes @ 0x0
   732     0070                     	ds	1
   733     0071                     ??_setup:
   734     0071                     ??_enviar_hora:	
   735                           ; 1 bytes @ 0x1
   736                           
   737     0071                     ??_enviar_fecha:	
   738                           ; 1 bytes @ 0x1
   739                           
   740     0071                     ??_leer_hora:	
   741                           ; 1 bytes @ 0x1
   742                           
   743     0071                     ??_leer_fecha:	
   744                           ; 1 bytes @ 0x1
   745                           
   746     0071                     ??_Lcd_Write_Char:	
   747                           ; 1 bytes @ 0x1
   748                           
   749     0071                     ??_Lcd_Cmd:	
   750                           ; 1 bytes @ 0x1
   751                           
   752     0071                     convertirHora@i:	
   753                           ; 1 bytes @ 0x1
   754                           
   755     0071                     convertirFecha@i:	
   756                           ; 1 bytes @ 0x1
   757                           
   758     0071                     isdigit@c:	
   759                           ; 1 bytes @ 0x1
   760                           
   761                           
   762                           ; 1 bytes @ 0x1
   763     0071                     	ds	1
   764     0072                     Lcd_Write_Char@temp:
   765     0072                     ___wmul@multiplicand:	
   766                           ; 1 bytes @ 0x2
   767                           
   768     0072                     ___lwdiv@dividend:	
   769                           ; 2 bytes @ 0x2
   770                           
   771                           
   772                           ; 2 bytes @ 0x2
   773     0072                     	ds	1
   774     0073                     Lcd_Cmd@a:
   775     0073                     Lcd_Write_Char@y:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 1 bytes @ 0x3
   780     0073                     	ds	1
   781     0074                     ??_Lcd_Init:
   782     0074                     ??_Lcd_Clear:	
   783                           ; 1 bytes @ 0x4
   784                           
   785     0074                     ?_Lcd_Set_Cursor:	
   786                           ; 1 bytes @ 0x4
   787                           
   788     0074                     ??___wmul:	
   789                           ; 1 bytes @ 0x4
   790                           
   791     0074                     ??___lwdiv:	
   792                           ; 1 bytes @ 0x4
   793                           
   794     0074                     Lcd_Set_Cursor@b:	
   795                           ; 1 bytes @ 0x4
   796                           
   797     0074                     Lcd_Write_Char@a:	
   798                           ; 1 bytes @ 0x4
   799                           
   800     0074                     ___wmul@product:	
   801                           ; 1 bytes @ 0x4
   802                           
   803                           
   804                           ; 2 bytes @ 0x4
   805     0074                     	ds	1
   806     0075                     ??_Lcd_Set_Cursor:
   807     0075                     ?_Lcd_Write_String:	
   808                           ; 1 bytes @ 0x5
   809                           
   810     0075                     ??_mostrar_hora:	
   811                           ; 1 bytes @ 0x5
   812                           
   813     0075                     ??_mostrar_fecha:	
   814                           ; 1 bytes @ 0x5
   815                           
   816     0075                     Lcd_Write_String@a:	
   817                           ; 1 bytes @ 0x5
   818                           
   819     0075                     ___lwdiv@quotient:	
   820                           ; 2 bytes @ 0x5
   821                           
   822                           
   823                           ; 2 bytes @ 0x5
   824     0075                     	ds	1
   825     0076                     ?_atoi:
   826     0076                     Lcd_Set_Cursor@a:	
   827                           ; 2 bytes @ 0x6
   828                           
   829                           
   830                           ; 1 bytes @ 0x6
   831     0076                     	ds	1
   832     0077                     ??_Lcd_Write_String:
   833     0077                     Lcd_Set_Cursor@z:	
   834                           ; 1 bytes @ 0x7
   835                           
   836     0077                     ___lwdiv@counter:	
   837                           ; 1 bytes @ 0x7
   838                           
   839                           
   840                           ; 1 bytes @ 0x7
   841     0077                     	ds	1
   842     0078                     ??_atoi:
   843     0078                     ?___lwmod:	
   844                           ; 1 bytes @ 0x8
   845                           
   846     0078                     Lcd_Set_Cursor@y:	
   847                           ; 2 bytes @ 0x8
   848                           
   849     0078                     ___lwmod@divisor:	
   850                           ; 1 bytes @ 0x8
   851                           
   852                           
   853                           ; 2 bytes @ 0x8
   854     0078                     	ds	1
   855     0079                     Lcd_Set_Cursor@temp:
   856                           
   857                           ; 1 bytes @ 0x9
   858     0079                     	ds	1
   859     007A                     atoi@sign:
   860     007A                     Lcd_Write_String@i:	
   861                           ; 1 bytes @ 0xA
   862                           
   863     007A                     ___lwmod@dividend:	
   864                           ; 2 bytes @ 0xA
   865                           
   866                           
   867                           ; 2 bytes @ 0xA
   868     007A                     	ds	1
   869     007B                     atoi@a:
   870                           
   871                           ; 2 bytes @ 0xB
   872     007B                     	ds	1
   873     007C                     ??___lwmod:
   874                           
   875                           ; 1 bytes @ 0xC
   876     007C                     	ds	1
   877     007D                     ___lwmod@counter:
   878     007D                     atoi@s:	
   879                           ; 1 bytes @ 0xD
   880                           
   881                           
   882                           ; 1 bytes @ 0xD
   883     007D                     	ds	1
   884                           
   885                           	psect	cstackBANK0
   886     003D                     __pcstackBANK0:
   887     003D                     ?_sprintf:
   888     003D                     sprintf@f:	
   889                           ; 2 bytes @ 0x0
   890                           
   891                           
   892                           ; 1 bytes @ 0x0
   893     003D                     	ds	3
   894     0040                     ??_sprintf:
   895                           
   896                           ; 1 bytes @ 0x3
   897     0040                     	ds	3
   898     0043                     sprintf@flag:
   899                           
   900                           ; 1 bytes @ 0x6
   901     0043                     	ds	1
   902     0044                     sprintf@ap:
   903                           
   904                           ; 1 bytes @ 0x7
   905     0044                     	ds	1
   906     0045                     sprintf@val:
   907                           
   908                           ; 2 bytes @ 0x8
   909     0045                     	ds	2
   910     0047                     sprintf@prec:
   911                           
   912                           ; 1 bytes @ 0xA
   913     0047                     	ds	1
   914     0048                     sprintf@sp:
   915                           
   916                           ; 1 bytes @ 0xB
   917     0048                     	ds	1
   918     0049                     sprintf@c:
   919                           
   920                           ; 1 bytes @ 0xC
   921     0049                     	ds	1
   922     004A                     ??_configuracion:
   923                           
   924                           ; 1 bytes @ 0xD
   925     004A                     	ds	2
   926     004C                     configuracion@num:
   927                           
   928                           ; 2 bytes @ 0xF
   929     004C                     	ds	2
   930     004E                     ??_main:
   931                           
   932                           ; 1 bytes @ 0x11
   933     004E                     	ds	3
   934                           
   935                           	psect	maintext
   936     0718                     __pmaintext:	
   937 ;;
   938 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   939 ;;
   940 ;; *************** function _main *****************
   941 ;; Defined at:
   942 ;;		line 66 in file "master.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : B00/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          0       3       0       0       0
   959 ;;      Totals:         0       3       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels required when called: 4
   962 ;; This function calls:
   963 ;;		_I2C_Read
   964 ;;		_I2C_Start
   965 ;;		_I2C_Stop
   966 ;;		_I2C_Write
   967 ;;		_Lcd_Clear
   968 ;;		_Lcd_Init
   969 ;;		_Lcd_Set_Cursor
   970 ;;		_Lcd_Write_String
   971 ;;		_configuracion
   972 ;;		_convertirFecha
   973 ;;		_convertirHora
   974 ;;		_enviar_fecha
   975 ;;		_enviar_hora
   976 ;;		_leer_fecha
   977 ;;		_leer_hora
   978 ;;		_mostrar_fecha
   979 ;;		_mostrar_hora
   980 ;;		_setup
   981 ;;		_sprintf
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     0718                     _main:	
   988                           ;psect for function _main
   989                           
   990     0718                     l1882:	
   991                           ;incstack = 0
   992                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994                           
   995                           ;master.c: 67:     setup();
   996     0718  120A  118A  20F9  120A  118A  	fcall	_setup
   997                           
   998                           ;master.c: 68:     Lcd_Init();
   999     071D  120A  118A  24E9  120A  118A  	fcall	_Lcd_Init
  1000                           
  1001                           ;master.c: 69:     Lcd_Clear();
  1002     0722  120A  118A  2091  120A  118A  	fcall	_Lcd_Clear
  1003                           
  1004                           ;master.c: 71:     Lcd_Set_Cursor(1,1);
  1005     0727  01F4               	clrf	Lcd_Set_Cursor@b
  1006     0728  0AF4               	incf	Lcd_Set_Cursor@b,f
  1007     0729  3001               	movlw	1
  1008     072A  120A  118A  25CA  120A  118A  	fcall	_Lcd_Set_Cursor
  1009     072F                     l1884:
  1010                           
  1011                           ;master.c: 72:     Lcd_Write_String("ADC:");
  1012     072F  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1013     0730  00F5               	movwf	Lcd_Write_String@a
  1014     0731  3080               	movlw	128
  1015     0732  00F6               	movwf	Lcd_Write_String@a+1
  1016     0733  120A  118A  22B5  120A  118A  	fcall	_Lcd_Write_String
  1017     0738                     l1886:
  1018                           
  1019                           ;master.c: 73:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1020     0738  3003               	movlw	3
  1021     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1022     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1023     073B  00CF               	movwf	??_main+1
  1024     073C  3097               	movlw	151
  1025     073D  00CE               	movwf	??_main
  1026     073E                     u1457:
  1027     073E  0BCE               	decfsz	??_main,f
  1028     073F  2F3E               	goto	u1457
  1029     0740  0BCF               	decfsz	??_main+1,f
  1030     0741  2F3E               	goto	u1457
  1031     0742                     l1888:
  1032                           
  1033                           ;master.c: 75:     ADCON1 = 0X06;
  1034     0742  3006               	movlw	6
  1035     0743  1683               	bsf	3,5	;RP0=1, select bank1
  1036     0744  1303               	bcf	3,6	;RP1=0, select bank1
  1037     0745  009F               	movwf	31	;volatile
  1038     0746                     l1890:
  1039                           
  1040                           ;master.c: 77:     convertirHora();
  1041     0746  120A  118A  2244  120A  118A  	fcall	_convertirHora
  1042     074B                     l1892:
  1043                           
  1044                           ;master.c: 78:     enviar_hora();
  1045     074B  120A  118A  21A9  120A  118A  	fcall	_enviar_hora
  1046     0750                     l1894:
  1047                           
  1048                           ;master.c: 80:     convertirFecha();
  1049     0750  120A  118A  220D  120A  118A  	fcall	_convertirFecha
  1050     0755                     l1896:
  1051                           
  1052                           ;master.c: 81:     enviar_fecha();
  1053     0755  120A  118A  217A  120A  118A  	fcall	_enviar_fecha
  1054     075A                     l1898:
  1055                           
  1056                           ;master.c: 84:         I2C_Start();
  1057     075A  120A  118A  2052  120A  118A  	fcall	_I2C_Start
  1058     075F                     l1900:
  1059                           
  1060                           ;master.c: 85:         I2C_Write(0x51);
  1061     075F  3051               	movlw	81
  1062     0760  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1063     0765                     l1902:
  1064                           
  1065                           ;master.c: 86:         ADC = I2C_Read();
  1066     0765  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  1067     076A  1283               	bcf	3,5	;RP0=0, select bank0
  1068     076B  1303               	bcf	3,6	;RP1=0, select bank0
  1069     076C  00A8               	movwf	_ADC
  1070     076D                     l1904:
  1071                           
  1072                           ;master.c: 87:         PORTB = ADC;
  1073     076D  0828               	movf	_ADC,w
  1074     076E  0086               	movwf	6	;volatile
  1075     076F                     l1906:
  1076                           
  1077                           ;master.c: 88:         I2C_Stop();
  1078     076F  120A  118A  205C  120A  118A  	fcall	_I2C_Stop
  1079     0774                     l1908:
  1080                           
  1081                           ;master.c: 89:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1082     0774  3082               	movlw	130
  1083     0775  1283               	bcf	3,5	;RP0=0, select bank0
  1084     0776  1303               	bcf	3,6	;RP1=0, select bank0
  1085     0777  00CF               	movwf	??_main+1
  1086     0778  30DD               	movlw	221
  1087     0779  00CE               	movwf	??_main
  1088     077A                     u1467:
  1089     077A  0BCE               	decfsz	??_main,f
  1090     077B  2F7A               	goto	u1467
  1091     077C  0BCF               	decfsz	??_main+1,f
  1092     077D  2F7A               	goto	u1467
  1093     077E                     l1910:
  1094                           
  1095                           ;master.c: 92:         Lcd_Set_Cursor(2,1);
  1096     077E  01F4               	clrf	Lcd_Set_Cursor@b
  1097     077F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1098     0780  3002               	movlw	2
  1099     0781  120A  118A  25CA  120A  118A  	fcall	_Lcd_Set_Cursor
  1100     0786                     l1912:
  1101                           
  1102                           ;master.c: 93:         sprintf(buffer, " %u  ", ADC);
  1103     0786  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1104     0787  1283               	bcf	3,5	;RP0=0, select bank0
  1105     0788  1303               	bcf	3,6	;RP1=0, select bank0
  1106     0789  00BD               	movwf	sprintf@f
  1107     078A  0828               	movf	_ADC,w
  1108     078B  00CE               	movwf	??_main
  1109     078C  01CF               	clrf	??_main+1
  1110     078D  084E               	movf	??_main,w
  1111     078E  00BE               	movwf	?_sprintf+1
  1112     078F  084F               	movf	??_main+1,w
  1113     0790  00BF               	movwf	?_sprintf+2
  1114     0791  3029               	movlw	(low (_buffer| 0))& (0+255)
  1115     0792  120A  118A  2657  120A  118A  	fcall	_sprintf
  1116     0797                     l1914:
  1117                           
  1118                           ;master.c: 94:         Lcd_Write_String(buffer);
  1119     0797  3029               	movlw	(low (_buffer| 0))& (0+255)
  1120     0798  00F5               	movwf	Lcd_Write_String@a
  1121     0799  3000               	movlw	0
  1122     079A  00F6               	movwf	Lcd_Write_String@a+1
  1123     079B  120A  118A  22B5  120A  118A  	fcall	_Lcd_Write_String
  1124     07A0                     l1916:
  1125                           
  1126                           ;master.c: 95:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1127     07A0  3003               	movlw	3
  1128     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1129     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1130     07A3  00CF               	movwf	??_main+1
  1131     07A4  3097               	movlw	151
  1132     07A5  00CE               	movwf	??_main
  1133     07A6                     u1477:
  1134     07A6  0BCE               	decfsz	??_main,f
  1135     07A7  2FA6               	goto	u1477
  1136     07A8  0BCF               	decfsz	??_main+1,f
  1137     07A9  2FA6               	goto	u1477
  1138     07AA                     l1918:
  1139                           
  1140                           ;master.c: 97:         Lcd_Set_Cursor(1, 7);
  1141     07AA  3007               	movlw	7
  1142     07AB  00F4               	movwf	Lcd_Set_Cursor@b
  1143     07AC  3001               	movlw	1
  1144     07AD  120A  118A  25CA  120A  118A  	fcall	_Lcd_Set_Cursor
  1145     07B2                     l1920:
  1146                           
  1147                           ;master.c: 98:         leer_hora();
  1148     07B2  120A  118A  2384  120A  118A  	fcall	_leer_hora
  1149     07B7                     l1922:
  1150                           
  1151                           ;master.c: 99:         mostrar_hora();
  1152     07B7  120A  118A  242B  120A  118A  	fcall	_mostrar_hora
  1153     07BC                     l1924:
  1154                           
  1155                           ;master.c: 101:         Lcd_Set_Cursor(2, 7);
  1156     07BC  3007               	movlw	7
  1157     07BD  00F4               	movwf	Lcd_Set_Cursor@b
  1158     07BE  3002               	movlw	2
  1159     07BF  120A  118A  25CA  120A  118A  	fcall	_Lcd_Set_Cursor
  1160     07C4                     l1926:
  1161                           
  1162                           ;master.c: 102:         leer_fecha();
  1163     07C4  120A  118A  233B  120A  118A  	fcall	_leer_fecha
  1164     07C9                     l1928:
  1165                           
  1166                           ;master.c: 103:         mostrar_fecha();
  1167     07C9  120A  118A  23CD  120A  118A  	fcall	_mostrar_fecha
  1168     07CE                     l1930:
  1169                           
  1170                           ;master.c: 105:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1171     07CE  3002               	movlw	2
  1172     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1173     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1174     07D1  00D0               	movwf	??_main+2
  1175     07D2  3004               	movlw	4
  1176     07D3  00CF               	movwf	??_main+1
  1177     07D4  30B9               	movlw	185
  1178     07D5  00CE               	movwf	??_main
  1179     07D6                     u1487:
  1180     07D6  0BCE               	decfsz	??_main,f
  1181     07D7  2FD6               	goto	u1487
  1182     07D8  0BCF               	decfsz	??_main+1,f
  1183     07D9  2FD6               	goto	u1487
  1184     07DA  0BD0               	decfsz	??_main+2,f
  1185     07DB  2FD6               	goto	u1487
  1186     07DC  2FDD               	nop2
  1187     07DD                     l1932:
  1188                           
  1189                           ;master.c: 107:         configuracion();
  1190     07DD  120A  118A  2489  120A  118A  	fcall	_configuracion
  1191     07E2  2F5A               	goto	l1898
  1192     07E3  120A  118A  2800   	ljmp	start
  1193     07E6                     __end_of_main:
  1194                           
  1195                           	psect	text1
  1196     00F9                     __ptext1:	
  1197 ;; *************** function _setup *****************
  1198 ;; Defined at:
  1199 ;;		line 115 in file "master.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 1
  1220 ;; This function calls:
  1221 ;;		_I2C_Init_Master
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227     00F9                     _setup:	
  1228                           ;psect for function _setup
  1229                           
  1230     00F9                     l1726:	
  1231                           ;incstack = 0
  1232                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1233                           
  1234                           
  1235                           ;master.c: 116:     ANSEL = 0;
  1236     00F9  1683               	bsf	3,5	;RP0=1, select bank3
  1237     00FA  1703               	bsf	3,6	;RP1=1, select bank3
  1238     00FB  0188               	clrf	8	;volatile
  1239                           
  1240                           ;master.c: 117:     ANSELH = 0;
  1241     00FC  0189               	clrf	9	;volatile
  1242                           
  1243                           ;master.c: 118:     TRISB = 0;
  1244     00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1245     00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1246     00FF  0186               	clrf	6	;volatile
  1247                           
  1248                           ;master.c: 119:     TRISD = 0;
  1249     0100  0188               	clrf	8	;volatile
  1250     0101                     l1728:
  1251                           
  1252                           ;master.c: 120:     TRISE = 0b00000111;
  1253     0101  3007               	movlw	7
  1254     0102  0089               	movwf	9	;volatile
  1255     0103                     l1730:
  1256                           
  1257                           ;master.c: 121:     PORTB = 0;
  1258     0103  1283               	bcf	3,5	;RP0=0, select bank0
  1259     0104  1303               	bcf	3,6	;RP1=0, select bank0
  1260     0105  0186               	clrf	6	;volatile
  1261     0106                     l1732:
  1262                           
  1263                           ;master.c: 122:     PORTD = 0;
  1264     0106  0188               	clrf	8	;volatile
  1265     0107                     l1734:
  1266                           
  1267                           ;master.c: 123:     PORTE = 0;
  1268     0107  0189               	clrf	9	;volatile
  1269     0108                     l1736:
  1270                           
  1271                           ;master.c: 125:     OSCCONbits.IRCF2 = 1;
  1272     0108  1683               	bsf	3,5	;RP0=1, select bank1
  1273     0109  1303               	bcf	3,6	;RP1=0, select bank1
  1274     010A  170F               	bsf	15,6	;volatile
  1275     010B                     l1738:
  1276                           
  1277                           ;master.c: 126:     OSCCONbits.IRCF1 = 1;
  1278     010B  168F               	bsf	15,5	;volatile
  1279     010C                     l1740:
  1280                           
  1281                           ;master.c: 127:     OSCCONbits.IRCF0 = 1;
  1282     010C  160F               	bsf	15,4	;volatile
  1283     010D                     l1742:
  1284                           
  1285                           ;master.c: 129:     I2C_Init_Master(0x80);
  1286     010D  3080               	movlw	128
  1287     010E  120A  118A  2114  120A  118A  	fcall	_I2C_Init_Master
  1288     0113                     l107:
  1289     0113  0008               	return
  1290     0114                     __end_of_setup:
  1291                           
  1292                           	psect	text2
  1293     0114                     __ptext2:	
  1294 ;; *************** function _I2C_Init_Master *****************
  1295 ;; Defined at:
  1296 ;;		line 4 in file "I2C.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  sp_i2c          1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  sp_i2c          1    0[COMMON] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         0       0       0       0       0
  1311 ;;      Locals:         1       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0
  1313 ;;      Totals:         1       0       0       0       0
  1314 ;;Total ram usage:        1 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_setup
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     0114                     _I2C_Init_Master:	
  1324                           ;psect for function _I2C_Init_Master
  1325                           
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1329                           ;I2C_Init_Master@sp_i2c stored from wreg
  1330     0114  00F0               	movwf	I2C_Init_Master@sp_i2c
  1331     0115                     l1678:
  1332                           
  1333                           ;I2C.c: 4: void I2C_Init_Master(unsigned char sp_i2c);I2C.c: 5: {;I2C.c: 6:     TRISCbit
      +                          s.TRISC3 = 1;
  1334     0115  1683               	bsf	3,5	;RP0=1, select bank1
  1335     0116  1303               	bcf	3,6	;RP1=0, select bank1
  1336     0117  1587               	bsf	7,3	;volatile
  1337                           
  1338                           ;I2C.c: 7:     TRISCbits.TRISC4 = 1;
  1339     0118  1607               	bsf	7,4	;volatile
  1340     0119                     l1680:
  1341                           
  1342                           ;I2C.c: 8:     SSPSTAT = sp_i2c;
  1343     0119  0870               	movf	I2C_Init_Master@sp_i2c,w
  1344     011A  0094               	movwf	20	;volatile
  1345                           
  1346                           ;I2C.c: 9:  SSPCON = 0x28;
  1347     011B  3028               	movlw	40
  1348     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1349     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1350     011E  0094               	movwf	20	;volatile
  1351     011F                     l1682:
  1352                           
  1353                           ;I2C.c: 10:     SSPCON2 = 0x00;
  1354     011F  1683               	bsf	3,5	;RP0=1, select bank1
  1355     0120  1303               	bcf	3,6	;RP1=0, select bank1
  1356     0121  0191               	clrf	17	;volatile
  1357     0122                     l1684:
  1358                           
  1359                           ;I2C.c: 11:     if(sp_i2c == 0x80){
  1360     0122  3080               	movlw	128
  1361     0123  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  1362     0124  1D03               	btfss	3,2
  1363     0125  2927               	goto	u1161
  1364     0126  2928               	goto	u1160
  1365     0127                     u1161:
  1366     0127  292B               	goto	l1688
  1367     0128                     u1160:
  1368     0128                     l1686:
  1369                           
  1370                           ;I2C.c: 12:         SSPADD = 19;
  1371     0128  3013               	movlw	19
  1372     0129  0093               	movwf	19	;volatile
  1373                           
  1374                           ;I2C.c: 13:     }
  1375     012A  2932               	goto	l166
  1376     012B                     l1688:
  1377     012B  0870               	movf	I2C_Init_Master@sp_i2c,w
  1378     012C  1D03               	btfss	3,2
  1379     012D  292F               	goto	u1171
  1380     012E  2930               	goto	u1170
  1381     012F                     u1171:
  1382     012F  2932               	goto	l166
  1383     0130                     u1170:
  1384     0130                     l1690:
  1385                           
  1386                           ;I2C.c: 15:         SSPADD = 29;
  1387     0130  301D               	movlw	29
  1388     0131  0093               	movwf	19	;volatile
  1389     0132                     l166:
  1390     0132  0008               	return
  1391     0133                     __end_of_I2C_Init_Master:
  1392                           
  1393                           	psect	text3
  1394     042B                     __ptext3:	
  1395 ;; *************** function _mostrar_hora *****************
  1396 ;; Defined at:
  1397 ;;		line 209 in file "master.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0
  1413 ;;      Temps:          1       0       0       0       0
  1414 ;;      Totals:         1       0       0       0       0
  1415 ;;Total ram usage:        1 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 2
  1418 ;; This function calls:
  1419 ;;		_Lcd_Write_Char
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425     042B                     _mostrar_hora:	
  1426                           ;psect for function _mostrar_hora
  1427                           
  1428     042B                     l1854:	
  1429                           ;incstack = 0
  1430                           ; Regs used in _mostrar_hora: [wreg+status,2+status,0+pclath+cstack]
  1431                           
  1432                           
  1433                           ;master.c: 210:     Lcd_Write_Char((hora>>4)+0x30);
  1434     042B  1283               	bcf	3,5	;RP0=0, select bank0
  1435     042C  1303               	bcf	3,6	;RP1=0, select bank0
  1436     042D  0825               	movf	_hora,w
  1437     042E  00F5               	movwf	??_mostrar_hora
  1438     042F  3004               	movlw	4
  1439     0430                     u1395:
  1440     0430  1003               	clrc
  1441     0431  0CF5               	rrf	??_mostrar_hora,f
  1442     0432  3EFF               	addlw	-1
  1443     0433  1D03               	skipz
  1444     0434  2C30               	goto	u1395
  1445     0435  0875               	movf	??_mostrar_hora,w
  1446     0436  3E30               	addlw	48
  1447     0437  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1448                           
  1449                           ;master.c: 211:     Lcd_Write_Char((hora & 0x0F)+0x30);
  1450     043C  1283               	bcf	3,5	;RP0=0, select bank0
  1451     043D  1303               	bcf	3,6	;RP1=0, select bank0
  1452     043E  0825               	movf	_hora,w
  1453     043F  390F               	andlw	15
  1454     0440  3E30               	addlw	48
  1455     0441  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1456                           
  1457                           ;master.c: 212:     Lcd_Write_Char(':');
  1458     0446  303A               	movlw	58
  1459     0447  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1460                           
  1461                           ;master.c: 213:     Lcd_Write_Char((min>>4)+0x30);
  1462     044C  1283               	bcf	3,5	;RP0=0, select bank0
  1463     044D  1303               	bcf	3,6	;RP1=0, select bank0
  1464     044E  0826               	movf	_min,w
  1465     044F  00F5               	movwf	??_mostrar_hora
  1466     0450  3004               	movlw	4
  1467     0451                     u1405:
  1468     0451  1003               	clrc
  1469     0452  0CF5               	rrf	??_mostrar_hora,f
  1470     0453  3EFF               	addlw	-1
  1471     0454  1D03               	skipz
  1472     0455  2C51               	goto	u1405
  1473     0456  0875               	movf	??_mostrar_hora,w
  1474     0457  3E30               	addlw	48
  1475     0458  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1476                           
  1477                           ;master.c: 214:     Lcd_Write_Char((min & 0x0F)+0x30);
  1478     045D  1283               	bcf	3,5	;RP0=0, select bank0
  1479     045E  1303               	bcf	3,6	;RP1=0, select bank0
  1480     045F  0826               	movf	_min,w
  1481     0460  390F               	andlw	15
  1482     0461  3E30               	addlw	48
  1483     0462  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1484                           
  1485                           ;master.c: 215:     Lcd_Write_Char(':');
  1486     0467  303A               	movlw	58
  1487     0468  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1488                           
  1489                           ;master.c: 216:     Lcd_Write_Char((sec>>4)+0x30);
  1490     046D  1283               	bcf	3,5	;RP0=0, select bank0
  1491     046E  1303               	bcf	3,6	;RP1=0, select bank0
  1492     046F  0827               	movf	_sec,w
  1493     0470  00F5               	movwf	??_mostrar_hora
  1494     0471  3004               	movlw	4
  1495     0472                     u1415:
  1496     0472  1003               	clrc
  1497     0473  0CF5               	rrf	??_mostrar_hora,f
  1498     0474  3EFF               	addlw	-1
  1499     0475  1D03               	skipz
  1500     0476  2C72               	goto	u1415
  1501     0477  0875               	movf	??_mostrar_hora,w
  1502     0478  3E30               	addlw	48
  1503     0479  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1504                           
  1505                           ;master.c: 217:     Lcd_Write_Char((sec & 0x0F)+0x30);
  1506     047E  1283               	bcf	3,5	;RP0=0, select bank0
  1507     047F  1303               	bcf	3,6	;RP1=0, select bank0
  1508     0480  0827               	movf	_sec,w
  1509     0481  390F               	andlw	15
  1510     0482  3E30               	addlw	48
  1511     0483  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  1512     0488                     l132:
  1513     0488  0008               	return
  1514     0489                     __end_of_mostrar_hora:
  1515                           
  1516                           	psect	text4
  1517     0384                     __ptext4:	
  1518 ;; *************** function _leer_hora *****************
  1519 ;; Defined at:
  1520 ;;		line 165 in file "master.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 1
  1541 ;; This function calls:
  1542 ;;		_I2C_Ack
  1543 ;;		_I2C_Nack
  1544 ;;		_I2C_Read
  1545 ;;		_I2C_Restart
  1546 ;;		_I2C_Start
  1547 ;;		_I2C_Stop
  1548 ;;		_I2C_Write
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554     0384                     _leer_hora:	
  1555                           ;psect for function _leer_hora
  1556                           
  1557     0384                     l1832:	
  1558                           ;incstack = 0
  1559                           ; Regs used in _leer_hora: [wreg+status,2+status,0+pclath+cstack]
  1560                           
  1561                           
  1562                           ;master.c: 167:     I2C_Start();
  1563     0384  120A  118A  2052  120A  118A  	fcall	_I2C_Start
  1564     0389                     l1834:
  1565                           
  1566                           ;master.c: 168:     I2C_Write(0xD0);
  1567     0389  30D0               	movlw	208
  1568     038A  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1569     038F                     l1836:
  1570                           
  1571                           ;master.c: 169:     I2C_Write(0x00);
  1572     038F  3000               	movlw	0
  1573     0390  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1574                           
  1575                           ;master.c: 170:     I2C_Restart();
  1576     0395  120A  118A  2066  120A  118A  	fcall	_I2C_Restart
  1577     039A                     l1838:
  1578                           
  1579                           ;master.c: 171:     I2C_Write(0xD1);
  1580     039A  30D1               	movlw	209
  1581     039B  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1582     03A0                     l1840:
  1583                           
  1584                           ;master.c: 172:     sec = I2C_Read();
  1585     03A0  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  1586     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1587     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1588     03A7  00A7               	movwf	_sec
  1589     03A8                     l1842:
  1590                           
  1591                           ;master.c: 173:     I2C_Ack();
  1592     03A8  120A  118A  2070  120A  118A  	fcall	_I2C_Ack
  1593     03AD                     l1844:
  1594                           
  1595                           ;master.c: 174:     min = I2C_Read();
  1596     03AD  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  1597     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1598     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1599     03B4  00A6               	movwf	_min
  1600     03B5                     l1846:
  1601                           
  1602                           ;master.c: 175:     I2C_Ack();
  1603     03B5  120A  118A  2070  120A  118A  	fcall	_I2C_Ack
  1604     03BA                     l1848:
  1605                           
  1606                           ;master.c: 176:     hora = I2C_Read();
  1607     03BA  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  1608     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1609     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1610     03C1  00A5               	movwf	_hora
  1611     03C2                     l1850:
  1612                           
  1613                           ;master.c: 177:     I2C_Nack();
  1614     03C2  120A  118A  207B  120A  118A  	fcall	_I2C_Nack
  1615     03C7                     l1852:
  1616                           
  1617                           ;master.c: 178:     I2C_Stop();
  1618     03C7  120A  118A  205C  120A  118A  	fcall	_I2C_Stop
  1619     03CC                     l123:
  1620     03CC  0008               	return
  1621     03CD                     __end_of_leer_hora:
  1622                           
  1623                           	psect	text5
  1624     01A9                     __ptext5:	
  1625 ;; *************** function _enviar_hora *****************
  1626 ;; Defined at:
  1627 ;;		line 154 in file "master.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 1
  1648 ;; This function calls:
  1649 ;;		_I2C_Start
  1650 ;;		_I2C_Stop
  1651 ;;		_I2C_Write
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657     01A9                     _enviar_hora:	
  1658                           ;psect for function _enviar_hora
  1659                           
  1660     01A9                     l1818:	
  1661                           ;incstack = 0
  1662                           ; Regs used in _enviar_hora: [wreg+status,2+status,0+pclath+cstack]
  1663                           
  1664                           
  1665                           ;master.c: 156:     I2C_Start();
  1666     01A9  120A  118A  2052  120A  118A  	fcall	_I2C_Start
  1667     01AE                     l1820:
  1668                           
  1669                           ;master.c: 157:     I2C_Write(0xD0);
  1670     01AE  30D0               	movlw	208
  1671     01AF  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1672     01B4                     l1822:
  1673                           
  1674                           ;master.c: 158:     I2C_Write(0x00);
  1675     01B4  3000               	movlw	0
  1676     01B5  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1677     01BA                     l1824:
  1678                           
  1679                           ;master.c: 159:     I2C_Write(sec);
  1680     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1681     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1682     01BC  0827               	movf	_sec,w
  1683     01BD  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1684     01C2                     l1826:
  1685                           
  1686                           ;master.c: 160:     I2C_Write(min);
  1687     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1688     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1689     01C4  0826               	movf	_min,w
  1690     01C5  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1691     01CA                     l1828:
  1692                           
  1693                           ;master.c: 161:     I2C_Write(hora);
  1694     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1695     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1696     01CC  0825               	movf	_hora,w
  1697     01CD  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  1698     01D2                     l1830:
  1699                           
  1700                           ;master.c: 162:     I2C_Stop();
  1701     01D2  120A  118A  205C  120A  118A  	fcall	_I2C_Stop
  1702     01D7                     l120:
  1703     01D7  0008               	return
  1704     01D8                     __end_of_enviar_hora:
  1705                           
  1706                           	psect	text6
  1707     0244                     __ptext6:	
  1708 ;; *************** function _convertirHora *****************
  1709 ;; Defined at:
  1710 ;;		line 132 in file "master.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  i               1    1[COMMON] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         0       0       0       0       0
  1725 ;;      Locals:         1       0       0       0       0
  1726 ;;      Temps:          1       0       0       0       0
  1727 ;;      Totals:         2       0       0       0       0
  1728 ;;Total ram usage:        2 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     0244                     _convertirHora:	
  1738                           ;psect for function _convertirHora
  1739                           
  1740     0244                     l1804:	
  1741                           ;incstack = 0
  1742                           ; Regs used in _convertirHora: [wreg-fsr0h+status,2+status,0]
  1743                           
  1744                           
  1745                           ;master.c: 134:     for(uint8_t i=0; i<7; i++){
  1746     0244  01F1               	clrf	convertirHora@i
  1747     0245                     l1810:
  1748                           
  1749                           ;master.c: 135:         Hora[i] &= 0x0F;
  1750     0245  300F               	movlw	15
  1751     0246  00F0               	movwf	??_convertirHora
  1752     0247  0871               	movf	convertirHora@i,w
  1753     0248  3E51               	addlw	(low (_Hora| 0))& (0+255)
  1754     0249  0084               	movwf	4
  1755     024A  0870               	movf	??_convertirHora,w
  1756     024B  1383               	bcf	3,7	;select IRP bank0
  1757     024C  0580               	andwf	0,f
  1758     024D                     l1812:
  1759                           
  1760                           ;master.c: 136:     }
  1761     024D  3001               	movlw	1
  1762     024E  00F0               	movwf	??_convertirHora
  1763     024F  0870               	movf	??_convertirHora,w
  1764     0250  07F1               	addwf	convertirHora@i,f
  1765     0251                     l1814:
  1766     0251  3007               	movlw	7
  1767     0252  0271               	subwf	convertirHora@i,w
  1768     0253  1C03               	skipc
  1769     0254  2A56               	goto	u1351
  1770     0255  2A57               	goto	u1350
  1771     0256                     u1351:
  1772     0256  2A45               	goto	l1810
  1773     0257                     u1350:
  1774     0257                     l1816:
  1775                           
  1776                           ;master.c: 138:     hora = ((Hora[0]<<4)+ Hora[1]);
  1777     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1778     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1779     0259  0851               	movf	_Hora,w
  1780     025A  00F0               	movwf	??_convertirHora
  1781     025B  3004               	movlw	4
  1782     025C                     u1365:
  1783     025C  1003               	clrc
  1784     025D  0DF0               	rlf	??_convertirHora,f
  1785     025E  3EFF               	addlw	-1
  1786     025F  1D03               	skipz
  1787     0260  2A5C               	goto	u1365
  1788     0261  0852               	movf	_Hora+1,w
  1789     0262  0770               	addwf	??_convertirHora,w
  1790     0263  00A5               	movwf	_hora
  1791                           
  1792                           ;master.c: 139:     min = ((Hora[2]<<4)+ Hora[3]);
  1793     0264  0853               	movf	_Hora+2,w
  1794     0265  00F0               	movwf	??_convertirHora
  1795     0266  3004               	movlw	4
  1796     0267                     u1375:
  1797     0267  1003               	clrc
  1798     0268  0DF0               	rlf	??_convertirHora,f
  1799     0269  3EFF               	addlw	-1
  1800     026A  1D03               	skipz
  1801     026B  2A67               	goto	u1375
  1802     026C  0854               	movf	_Hora+3,w
  1803     026D  0770               	addwf	??_convertirHora,w
  1804     026E  00A6               	movwf	_min
  1805                           
  1806                           ;master.c: 140:     sec = ((Hora[4]<<4)+ Hora[5]);
  1807     026F  0855               	movf	_Hora+4,w
  1808     0270  00F0               	movwf	??_convertirHora
  1809     0271  3004               	movlw	4
  1810     0272                     u1385:
  1811     0272  1003               	clrc
  1812     0273  0DF0               	rlf	??_convertirHora,f
  1813     0274  3EFF               	addlw	-1
  1814     0275  1D03               	skipz
  1815     0276  2A72               	goto	u1385
  1816     0277  0856               	movf	_Hora+5,w
  1817     0278  0770               	addwf	??_convertirHora,w
  1818     0279  00A7               	movwf	_sec
  1819     027A                     l112:
  1820     027A  0008               	return
  1821     027B                     __end_of_convertirHora:
  1822                           
  1823                           	psect	text7
  1824     0489                     __ptext7:	
  1825 ;; *************** function _configuracion *****************
  1826 ;; Defined at:
  1827 ;;		line 232 in file "master.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  num             2   15[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       2       0       0       0
  1843 ;;      Temps:          0       2       0       0       0
  1844 ;;      Totals:         0       4       0       0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 3
  1848 ;; This function calls:
  1849 ;;		_atoi
  1850 ;;		_convertirFecha
  1851 ;;		_enviar_fecha
  1852 ;;		_leer_fecha
  1853 ;;		_mostrar_fecha
  1854 ;;		_sprintf
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860     0489                     _configuracion:	
  1861                           ;psect for function _configuracion
  1862                           
  1863     0489                     l1856:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _configuracion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1866                           
  1867                           
  1868                           ;master.c: 234:     if (caso == 0) {
  1869     0489  1283               	bcf	3,5	;RP0=0, select bank0
  1870     048A  1303               	bcf	3,6	;RP1=0, select bank0
  1871     048B  0820               	movf	_caso,w
  1872     048C  0421               	iorwf	_caso+1,w
  1873     048D  1D03               	btfss	3,2
  1874     048E  2C90               	goto	u1421
  1875     048F  2C91               	goto	u1420
  1876     0490                     u1421:
  1877     0490  2CE8               	goto	l144
  1878     0491                     u1420:
  1879     0491                     l1858:
  1880                           
  1881                           ;master.c: 235:         if (PORTEbits.RE0 == 1){
  1882     0491  1C09               	btfss	9,0	;volatile
  1883     0492  2C94               	goto	u1431
  1884     0493  2C95               	goto	u1430
  1885     0494                     u1431:
  1886     0494  2CDE               	goto	l1878
  1887     0495                     u1430:
  1888     0495                     l1860:
  1889                           
  1890                           ;master.c: 236:        {;master.c: 237:         caso = caso +1;
  1891     0495  0820               	movf	_caso,w
  1892     0496  3E01               	addlw	1
  1893     0497  00A0               	movwf	_caso
  1894     0498  0821               	movf	_caso+1,w
  1895     0499  1803               	skipnc
  1896     049A  3E01               	addlw	1
  1897     049B  3E00               	addlw	0
  1898     049C  00A1               	movwf	_caso+1
  1899     049D                     l140:	
  1900                           ;master.c: 238:         while(PORTEbits.RE0 == 1);
  1901                           
  1902     049D  1809               	btfsc	9,0	;volatile
  1903     049E  2CA0               	goto	u1441
  1904     049F  2CA1               	goto	u1440
  1905     04A0                     u1441:
  1906     04A0  2C9D               	goto	l140
  1907     04A1                     u1440:
  1908     04A1                     l1862:
  1909                           
  1910                           ;master.c: 239:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1911     04A1  3034               	movlw	52
  1912     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1913     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1914     04A4  00CB               	movwf	??_configuracion+1
  1915     04A5  30F1               	movlw	241
  1916     04A6  00CA               	movwf	??_configuracion
  1917     04A7                     u1497:
  1918     04A7  0BCA               	decfsz	??_configuracion,f
  1919     04A8  2CA7               	goto	u1497
  1920     04A9  0BCB               	decfsz	??_configuracion+1,f
  1921     04AA  2CA7               	goto	u1497
  1922     04AB                     l1864:
  1923                           
  1924                           ;master.c: 240:     int num = atoi(&Fecha[5]);
  1925     04AB  305D               	movlw	(low ((_Fecha| 0+5)))& (0+255)
  1926     04AC  120A  118A  254F  120A  118A  	fcall	_atoi
  1927     04B1  0877               	movf	?_atoi+1,w
  1928     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1929     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1930     04B4  00CD               	movwf	configuracion@num+1
  1931     04B5  0876               	movf	?_atoi,w
  1932     04B6  00CC               	movwf	configuracion@num
  1933     04B7                     l1866:
  1934                           
  1935                           ;master.c: 241:     num ++;
  1936     04B7  3001               	movlw	1
  1937     04B8  07CC               	addwf	configuracion@num,f
  1938     04B9  1803               	skipnc
  1939     04BA  0ACD               	incf	configuracion@num+1,f
  1940     04BB  3000               	movlw	0
  1941     04BC  07CD               	addwf	configuracion@num+1,f
  1942     04BD                     l1868:
  1943                           
  1944                           ;master.c: 242:     sprintf(&Fecha[5], "%u", num);
  1945     04BD  3016               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1946     04BE  00BD               	movwf	sprintf@f
  1947     04BF  084D               	movf	configuracion@num+1,w
  1948     04C0  00BF               	movwf	?_sprintf+2
  1949     04C1  084C               	movf	configuracion@num,w
  1950     04C2  00BE               	movwf	?_sprintf+1
  1951     04C3  305D               	movlw	(low ((_Fecha| 0+5)))& (0+255)
  1952     04C4  120A  118A  2657  120A  118A  	fcall	_sprintf
  1953     04C9                     l1870:
  1954                           
  1955                           ;master.c: 243:     convertirFecha();
  1956     04C9  120A  118A  220D  120A  118A  	fcall	_convertirFecha
  1957     04CE                     l1872:
  1958                           
  1959                           ;master.c: 244:     enviar_fecha();
  1960     04CE  120A  118A  217A  120A  118A  	fcall	_enviar_fecha
  1961     04D3                     l1874:
  1962                           
  1963                           ;master.c: 245:     leer_fecha();
  1964     04D3  120A  118A  233B  120A  118A  	fcall	_leer_fecha
  1965     04D8                     l1876:
  1966                           
  1967                           ;master.c: 246:     mostrar_fecha();
  1968     04D8  120A  118A  23CD  120A  118A  	fcall	_mostrar_fecha
  1969                           
  1970                           ;master.c: 247:                 };master.c: 248: }
  1971     04DD  2CE3               	goto	l1880
  1972     04DE                     l1878:
  1973                           
  1974                           ;master.c: 250:         convertirFecha();
  1975     04DE  120A  118A  220D  120A  118A  	fcall	_convertirFecha
  1976     04E3                     l1880:
  1977                           
  1978                           ;master.c: 251:         enviar_fecha();
  1979     04E3  120A  118A  217A  120A  118A  	fcall	_enviar_fecha
  1980     04E8                     l144:
  1981     04E8  0008               	return
  1982     04E9                     __end_of_configuracion:
  1983                           
  1984                           	psect	text8
  1985     0657                     __ptext8:	
  1986 ;; *************** function _sprintf *****************
  1987 ;; Defined at:
  1988 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  sp              1    wreg     PTR unsigned char 
  1991 ;;		 -> Fecha(7), buffer(20), 
  1992 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1993 ;;		 -> STR_3(3), STR_2(6), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1996 ;;		 -> Fecha(7), buffer(20), 
  1997 ;;  tmpval          4    0        struct .
  1998 ;;  val             2    8[BANK0 ] unsigned int 
  1999 ;;  cp              2    0        PTR const unsigned char 
  2000 ;;  len             2    0        unsigned int 
  2001 ;;  c               1   12[BANK0 ] unsigned char 
  2002 ;;  prec            1   10[BANK0 ] char 
  2003 ;;  ap              1    7[BANK0 ] PTR void [1]
  2004 ;;		 -> ?_sprintf(2), 
  2005 ;;  flag            1    6[BANK0 ] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  2    0[BANK0 ] int 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       3       0       0       0
  2016 ;;      Locals:         0       7       0       0       0
  2017 ;;      Temps:          0       3       0       0       0
  2018 ;;      Totals:         0      13       0       0       0
  2019 ;;Total ram usage:       13 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 1
  2022 ;; This function calls:
  2023 ;;		___lwdiv
  2024 ;;		___lwmod
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;;		_configuracion
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031     0657                     _sprintf:	
  2032                           ;psect for function _sprintf
  2033                           
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2037                           ;sprintf@sp stored from wreg
  2038     0657  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0658  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0659  00C8               	movwf	sprintf@sp
  2041     065A                     l1602:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2044     065A  303E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2045     065B  00C4               	movwf	sprintf@ap
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2048     065C  2F03               	goto	l1644
  2049     065D                     l1604:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2052     065D  3025               	movlw	37
  2053     065E  0649               	xorwf	sprintf@c,w
  2054     065F  1903               	btfsc	3,2
  2055     0660  2E62               	goto	u1081
  2056     0661  2E63               	goto	u1080
  2057     0662                     u1081:
  2058     0662  2E6D               	goto	l1610
  2059     0663                     u1080:
  2060     0663                     l1606:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2063     0663  0848               	movf	sprintf@sp,w
  2064     0664  0084               	movwf	4
  2065     0665  0849               	movf	sprintf@c,w
  2066     0666  1383               	bcf	3,7	;select IRP bank0
  2067     0667  0080               	movwf	0
  2068     0668                     l1608:
  2069     0668  3001               	movlw	1
  2070     0669  00C0               	movwf	??_sprintf
  2071     066A  0840               	movf	??_sprintf,w
  2072     066B  07C8               	addwf	sprintf@sp,f
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2075     066C  2F03               	goto	l1644
  2076     066D                     l1610:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2079     066D  01C3               	clrf	sprintf@flag
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2082     066E  2E74               	goto	l1616
  2083     066F                     l1612:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2086     066F  30C0               	movlw	192
  2087     0670  00C0               	movwf	??_sprintf
  2088     0671  0840               	movf	??_sprintf,w
  2089     0672  04C3               	iorwf	sprintf@flag,f
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2092     0673  2E8E               	goto	l1618
  2093     0674                     l1616:
  2094     0674  3001               	movlw	1
  2095     0675  07BD               	addwf	sprintf@f,f
  2096     0676  30FF               	movlw	-1
  2097     0677  073D               	addwf	sprintf@f,w
  2098     0678  0084               	movwf	4
  2099     0679  120A  118A  200D  120A  118A  	fcall	stringdir
  2100     067E  00C9               	movwf	sprintf@c
  2101     067F  00C0               	movwf	??_sprintf
  2102     0680  01C1               	clrf	??_sprintf+1
  2103                           
  2104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2105                           ; Switch size 1, requested type "simple"
  2106                           ; Number of cases is 1, Range of values is 0 to 0
  2107                           ; switch strategies available:
  2108                           ; Name         Instructions Cycles
  2109                           ; simple_byte            4     3 (average)
  2110                           ; direct_byte           11     8 (fixed)
  2111                           ; jumptable            260     6 (fixed)
  2112                           ;	Chosen strategy is simple_byte
  2113     0681  0841               	movf	??_sprintf+1,w
  2114     0682  3A00               	xorlw	0	; case 0
  2115     0683  1903               	skipnz
  2116     0684  2E86               	goto	l1962
  2117     0685  2F03               	goto	l1644
  2118     0686                     l1962:
  2119                           
  2120                           ; Switch size 1, requested type "simple"
  2121                           ; Number of cases is 2, Range of values is 0 to 117
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte            7     4 (average)
  2125                           ; jumptable            260     6 (fixed)
  2126                           ;	Chosen strategy is simple_byte
  2127     0686  0840               	movf	??_sprintf,w
  2128     0687  3A00               	xorlw	0	; case 0
  2129     0688  1903               	skipnz
  2130     0689  2F13               	goto	l1646
  2131     068A  3A75               	xorlw	117	; case 117
  2132     068B  1903               	skipnz
  2133     068C  2E6F               	goto	l1612
  2134     068D  2F03               	goto	l1644
  2135     068E                     l1618:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2138     068E  0844               	movf	sprintf@ap,w
  2139     068F  0084               	movwf	4
  2140     0690  1383               	bcf	3,7	;select IRP bank0
  2141     0691  0800               	movf	0,w
  2142     0692  00C5               	movwf	sprintf@val
  2143     0693  0A84               	incf	4,f
  2144     0694  0800               	movf	0,w
  2145     0695  00C6               	movwf	sprintf@val+1
  2146     0696                     l1620:
  2147     0696  3002               	movlw	2
  2148     0697  00C0               	movwf	??_sprintf
  2149     0698  0840               	movf	??_sprintf,w
  2150     0699  07C4               	addwf	sprintf@ap,f
  2151     069A                     l1622:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2154     069A  01C9               	clrf	sprintf@c
  2155     069B  0AC9               	incf	sprintf@c,f
  2156     069C                     l1628:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2159     069C  0849               	movf	sprintf@c,w
  2160     069D  00C0               	movwf	??_sprintf
  2161     069E  0740               	addwf	??_sprintf,w
  2162     069F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2163     06A0  0084               	movwf	4
  2164     06A1  120A  118A  200D  120A  118A  	fcall	stringdir
  2165     06A6  00C1               	movwf	??_sprintf+1
  2166     06A7  120A  118A  200D  120A  118A  	fcall	stringdir
  2167     06AC  00C2               	movwf	??_sprintf+2
  2168     06AD  0842               	movf	??_sprintf+2,w
  2169     06AE  0246               	subwf	sprintf@val+1,w
  2170     06AF  1D03               	skipz
  2171     06B0  2EB3               	goto	u1095
  2172     06B1  0841               	movf	??_sprintf+1,w
  2173     06B2  0245               	subwf	sprintf@val,w
  2174     06B3                     u1095:
  2175     06B3  1803               	skipnc
  2176     06B4  2EB6               	goto	u1091
  2177     06B5  2EB7               	goto	u1090
  2178     06B6                     u1091:
  2179     06B6  2EB8               	goto	l1632
  2180     06B7                     u1090:
  2181     06B7  2EC2               	goto	l1634
  2182     06B8                     l1632:
  2183     06B8  3001               	movlw	1
  2184     06B9  00C0               	movwf	??_sprintf
  2185     06BA  0840               	movf	??_sprintf,w
  2186     06BB  07C9               	addwf	sprintf@c,f
  2187     06BC  3005               	movlw	5
  2188     06BD  0649               	xorwf	sprintf@c,w
  2189     06BE  1D03               	btfss	3,2
  2190     06BF  2EC1               	goto	u1101
  2191     06C0  2EC2               	goto	u1100
  2192     06C1                     u1101:
  2193     06C1  2E9C               	goto	l1628
  2194     06C2                     u1100:
  2195     06C2                     l1634:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2198     06C2  0849               	movf	sprintf@c,w
  2199     06C3  00C7               	movwf	sprintf@prec
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2202     06C4  2EFA               	goto	l1642
  2203     06C5                     l1636:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2206     06C5  300A               	movlw	10
  2207     06C6  00F8               	movwf	___lwmod@divisor
  2208     06C7  3000               	movlw	0
  2209     06C8  00F9               	movwf	___lwmod@divisor+1
  2210     06C9  0847               	movf	sprintf@prec,w
  2211     06CA  00C0               	movwf	??_sprintf
  2212     06CB  0740               	addwf	??_sprintf,w
  2213     06CC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2214     06CD  0084               	movwf	4
  2215     06CE  120A  118A  200D  120A  118A  	fcall	stringdir
  2216     06D3  00F0               	movwf	___lwdiv@divisor
  2217     06D4  120A  118A  200D  120A  118A  	fcall	stringdir
  2218     06D9  00F1               	movwf	___lwdiv@divisor+1
  2219     06DA  0846               	movf	sprintf@val+1,w
  2220     06DB  00F3               	movwf	___lwdiv@dividend+1
  2221     06DC  0845               	movf	sprintf@val,w
  2222     06DD  00F2               	movwf	___lwdiv@dividend
  2223     06DE  120A  118A  22F7  120A  118A  	fcall	___lwdiv
  2224     06E3  0871               	movf	?___lwdiv+1,w
  2225     06E4  00FB               	movwf	___lwmod@dividend+1
  2226     06E5  0870               	movf	?___lwdiv,w
  2227     06E6  00FA               	movwf	___lwmod@dividend
  2228     06E7  120A  118A  227B  120A  118A  	fcall	___lwmod
  2229     06EC  0878               	movf	?___lwmod,w
  2230     06ED  3E30               	addlw	48
  2231     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2232     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2233     06F0  00C9               	movwf	sprintf@c
  2234     06F1                     l1638:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2237     06F1  0848               	movf	sprintf@sp,w
  2238     06F2  0084               	movwf	4
  2239     06F3  0849               	movf	sprintf@c,w
  2240     06F4  1383               	bcf	3,7	;select IRP bank0
  2241     06F5  0080               	movwf	0
  2242     06F6                     l1640:
  2243     06F6  3001               	movlw	1
  2244     06F7  00C0               	movwf	??_sprintf
  2245     06F8  0840               	movf	??_sprintf,w
  2246     06F9  07C8               	addwf	sprintf@sp,f
  2247     06FA                     l1642:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2250     06FA  30FF               	movlw	255
  2251     06FB  00C0               	movwf	??_sprintf
  2252     06FC  0840               	movf	??_sprintf,w
  2253     06FD  07C7               	addwf	sprintf@prec,f
  2254     06FE  0A47               	incf	sprintf@prec,w
  2255     06FF  1D03               	btfss	3,2
  2256     0700  2F02               	goto	u1111
  2257     0701  2F03               	goto	u1110
  2258     0702                     u1111:
  2259     0702  2EC5               	goto	l1636
  2260     0703                     u1110:
  2261     0703                     l1644:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2264     0703  3001               	movlw	1
  2265     0704  07BD               	addwf	sprintf@f,f
  2266     0705  30FF               	movlw	-1
  2267     0706  073D               	addwf	sprintf@f,w
  2268     0707  0084               	movwf	4
  2269     0708  120A  118A  200D  120A  118A  	fcall	stringdir
  2270     070D  00C9               	movwf	sprintf@c
  2271     070E  0849               	movf	sprintf@c,w
  2272     070F  1D03               	btfss	3,2
  2273     0710  2F12               	goto	u1121
  2274     0711  2F13               	goto	u1120
  2275     0712                     u1121:
  2276     0712  2E5D               	goto	l1604
  2277     0713                     u1120:
  2278     0713                     l1646:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2281     0713  0848               	movf	sprintf@sp,w
  2282     0714  0084               	movwf	4
  2283     0715  1383               	bcf	3,7	;select IRP bank0
  2284     0716  0180               	clrf	0
  2285     0717                     l380:
  2286     0717  0008               	return
  2287     0718                     __end_of_sprintf:
  2288                           
  2289                           	psect	text9
  2290     027B                     __ptext9:	
  2291 ;; *************** function ___lwmod *****************
  2292 ;; Defined at:
  2293 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  divisor         2    8[COMMON] unsigned int 
  2296 ;;  dividend        2   10[COMMON] unsigned int 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  counter         1   13[COMMON] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2    8[COMMON] unsigned int 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         4       0       0       0       0
  2309 ;;      Locals:         1       0       0       0       0
  2310 ;;      Temps:          1       0       0       0       0
  2311 ;;      Totals:         6       0       0       0       0
  2312 ;;Total ram usage:        6 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_sprintf
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321     027B                     ___lwmod:	
  2322                           ;psect for function ___lwmod
  2323                           
  2324     027B                     l1538:	
  2325                           ;incstack = 0
  2326                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2327                           
  2328     027B  0878               	movf	___lwmod@divisor,w
  2329     027C  0479               	iorwf	___lwmod@divisor+1,w
  2330     027D  1903               	btfsc	3,2
  2331     027E  2A80               	goto	u961
  2332     027F  2A81               	goto	u960
  2333     0280                     u961:
  2334     0280  2AB0               	goto	l1556
  2335     0281                     u960:
  2336     0281                     l1540:
  2337     0281  01FD               	clrf	___lwmod@counter
  2338     0282  0AFD               	incf	___lwmod@counter,f
  2339     0283  2A8F               	goto	l1546
  2340     0284                     l1542:
  2341     0284  3001               	movlw	1
  2342     0285                     u975:
  2343     0285  1003               	clrc
  2344     0286  0DF8               	rlf	___lwmod@divisor,f
  2345     0287  0DF9               	rlf	___lwmod@divisor+1,f
  2346     0288  3EFF               	addlw	-1
  2347     0289  1D03               	skipz
  2348     028A  2A85               	goto	u975
  2349     028B                     l1544:
  2350     028B  3001               	movlw	1
  2351     028C  00FC               	movwf	??___lwmod
  2352     028D  087C               	movf	??___lwmod,w
  2353     028E  07FD               	addwf	___lwmod@counter,f
  2354     028F                     l1546:
  2355     028F  1FF9               	btfss	___lwmod@divisor+1,7
  2356     0290  2A92               	goto	u981
  2357     0291  2A93               	goto	u980
  2358     0292                     u981:
  2359     0292  2A84               	goto	l1542
  2360     0293                     u980:
  2361     0293                     l1548:
  2362     0293  0879               	movf	___lwmod@divisor+1,w
  2363     0294  027B               	subwf	___lwmod@dividend+1,w
  2364     0295  1D03               	skipz
  2365     0296  2A99               	goto	u995
  2366     0297  0878               	movf	___lwmod@divisor,w
  2367     0298  027A               	subwf	___lwmod@dividend,w
  2368     0299                     u995:
  2369     0299  1C03               	skipc
  2370     029A  2A9C               	goto	u991
  2371     029B  2A9D               	goto	u990
  2372     029C                     u991:
  2373     029C  2AA3               	goto	l1552
  2374     029D                     u990:
  2375     029D                     l1550:
  2376     029D  0878               	movf	___lwmod@divisor,w
  2377     029E  02FA               	subwf	___lwmod@dividend,f
  2378     029F  0879               	movf	___lwmod@divisor+1,w
  2379     02A0  1C03               	skipc
  2380     02A1  03FB               	decf	___lwmod@dividend+1,f
  2381     02A2  02FB               	subwf	___lwmod@dividend+1,f
  2382     02A3                     l1552:
  2383     02A3  3001               	movlw	1
  2384     02A4                     u1005:
  2385     02A4  1003               	clrc
  2386     02A5  0CF9               	rrf	___lwmod@divisor+1,f
  2387     02A6  0CF8               	rrf	___lwmod@divisor,f
  2388     02A7  3EFF               	addlw	-1
  2389     02A8  1D03               	skipz
  2390     02A9  2AA4               	goto	u1005
  2391     02AA                     l1554:
  2392     02AA  3001               	movlw	1
  2393     02AB  02FD               	subwf	___lwmod@counter,f
  2394     02AC  1D03               	btfss	3,2
  2395     02AD  2AAF               	goto	u1011
  2396     02AE  2AB0               	goto	u1010
  2397     02AF                     u1011:
  2398     02AF  2A93               	goto	l1548
  2399     02B0                     u1010:
  2400     02B0                     l1556:
  2401     02B0  087B               	movf	___lwmod@dividend+1,w
  2402     02B1  00F9               	movwf	?___lwmod+1
  2403     02B2  087A               	movf	___lwmod@dividend,w
  2404     02B3  00F8               	movwf	?___lwmod
  2405     02B4                     l666:
  2406     02B4  0008               	return
  2407     02B5                     __end_of___lwmod:
  2408                           
  2409                           	psect	text10
  2410     02F7                     __ptext10:	
  2411 ;; *************** function ___lwdiv *****************
  2412 ;; Defined at:
  2413 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  divisor         2    0[COMMON] unsigned int 
  2416 ;;  dividend        2    2[COMMON] unsigned int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  quotient        2    5[COMMON] unsigned int 
  2419 ;;  counter         1    7[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2    0[COMMON] unsigned int 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         4       0       0       0       0
  2430 ;;      Locals:         3       0       0       0       0
  2431 ;;      Temps:          1       0       0       0       0
  2432 ;;      Totals:         8       0       0       0       0
  2433 ;;Total ram usage:        8 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_sprintf
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442     02F7                     ___lwdiv:	
  2443                           ;psect for function ___lwdiv
  2444                           
  2445     02F7                     l1512:	
  2446                           ;incstack = 0
  2447                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2448                           
  2449     02F7  01F5               	clrf	___lwdiv@quotient
  2450     02F8  01F6               	clrf	___lwdiv@quotient+1
  2451     02F9                     l1514:
  2452     02F9  0870               	movf	___lwdiv@divisor,w
  2453     02FA  0471               	iorwf	___lwdiv@divisor+1,w
  2454     02FB  1903               	btfsc	3,2
  2455     02FC  2AFE               	goto	u891
  2456     02FD  2AFF               	goto	u890
  2457     02FE                     u891:
  2458     02FE  2B36               	goto	l1534
  2459     02FF                     u890:
  2460     02FF                     l1516:
  2461     02FF  01F7               	clrf	___lwdiv@counter
  2462     0300  0AF7               	incf	___lwdiv@counter,f
  2463     0301  2B0D               	goto	l1522
  2464     0302                     l1518:
  2465     0302  3001               	movlw	1
  2466     0303                     u905:
  2467     0303  1003               	clrc
  2468     0304  0DF0               	rlf	___lwdiv@divisor,f
  2469     0305  0DF1               	rlf	___lwdiv@divisor+1,f
  2470     0306  3EFF               	addlw	-1
  2471     0307  1D03               	skipz
  2472     0308  2B03               	goto	u905
  2473     0309                     l1520:
  2474     0309  3001               	movlw	1
  2475     030A  00F4               	movwf	??___lwdiv
  2476     030B  0874               	movf	??___lwdiv,w
  2477     030C  07F7               	addwf	___lwdiv@counter,f
  2478     030D                     l1522:
  2479     030D  1FF1               	btfss	___lwdiv@divisor+1,7
  2480     030E  2B10               	goto	u911
  2481     030F  2B11               	goto	u910
  2482     0310                     u911:
  2483     0310  2B02               	goto	l1518
  2484     0311                     u910:
  2485     0311                     l1524:
  2486     0311  3001               	movlw	1
  2487     0312                     u925:
  2488     0312  1003               	clrc
  2489     0313  0DF5               	rlf	___lwdiv@quotient,f
  2490     0314  0DF6               	rlf	___lwdiv@quotient+1,f
  2491     0315  3EFF               	addlw	-1
  2492     0316  1D03               	skipz
  2493     0317  2B12               	goto	u925
  2494     0318  0871               	movf	___lwdiv@divisor+1,w
  2495     0319  0273               	subwf	___lwdiv@dividend+1,w
  2496     031A  1D03               	skipz
  2497     031B  2B1E               	goto	u935
  2498     031C  0870               	movf	___lwdiv@divisor,w
  2499     031D  0272               	subwf	___lwdiv@dividend,w
  2500     031E                     u935:
  2501     031E  1C03               	skipc
  2502     031F  2B21               	goto	u931
  2503     0320  2B22               	goto	u930
  2504     0321                     u931:
  2505     0321  2B29               	goto	l1530
  2506     0322                     u930:
  2507     0322                     l1526:
  2508     0322  0870               	movf	___lwdiv@divisor,w
  2509     0323  02F2               	subwf	___lwdiv@dividend,f
  2510     0324  0871               	movf	___lwdiv@divisor+1,w
  2511     0325  1C03               	skipc
  2512     0326  03F3               	decf	___lwdiv@dividend+1,f
  2513     0327  02F3               	subwf	___lwdiv@dividend+1,f
  2514     0328                     l1528:
  2515     0328  1475               	bsf	___lwdiv@quotient,0
  2516     0329                     l1530:
  2517     0329  3001               	movlw	1
  2518     032A                     u945:
  2519     032A  1003               	clrc
  2520     032B  0CF1               	rrf	___lwdiv@divisor+1,f
  2521     032C  0CF0               	rrf	___lwdiv@divisor,f
  2522     032D  3EFF               	addlw	-1
  2523     032E  1D03               	skipz
  2524     032F  2B2A               	goto	u945
  2525     0330                     l1532:
  2526     0330  3001               	movlw	1
  2527     0331  02F7               	subwf	___lwdiv@counter,f
  2528     0332  1D03               	btfss	3,2
  2529     0333  2B35               	goto	u951
  2530     0334  2B36               	goto	u950
  2531     0335                     u951:
  2532     0335  2B11               	goto	l1524
  2533     0336                     u950:
  2534     0336                     l1534:
  2535     0336  0876               	movf	___lwdiv@quotient+1,w
  2536     0337  00F1               	movwf	?___lwdiv+1
  2537     0338  0875               	movf	___lwdiv@quotient,w
  2538     0339  00F0               	movwf	?___lwdiv
  2539     033A                     l656:
  2540     033A  0008               	return
  2541     033B                     __end_of___lwdiv:
  2542                           
  2543                           	psect	text11
  2544     03CD                     __ptext11:	
  2545 ;; *************** function _mostrar_fecha *****************
  2546 ;; Defined at:
  2547 ;;		line 220 in file "master.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          1       0       0       0       0
  2564 ;;      Totals:         1       0       0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 2
  2568 ;; This function calls:
  2569 ;;		_Lcd_Write_Char
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;;		_configuracion
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576     03CD                     _mostrar_fecha:	
  2577                           ;psect for function _mostrar_fecha
  2578                           
  2579     03CD                     l1676:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _mostrar_fecha: [wreg+status,2+status,0+pclath+cstack]
  2582                           
  2583                           
  2584                           ;master.c: 222:     Lcd_Write_Char((dia>>4)+0x30);
  2585     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2586     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2587     03CF  0824               	movf	_dia,w
  2588     03D0  00F5               	movwf	??_mostrar_fecha
  2589     03D1  3004               	movlw	4
  2590     03D2                     u1135:
  2591     03D2  1003               	clrc
  2592     03D3  0CF5               	rrf	??_mostrar_fecha,f
  2593     03D4  3EFF               	addlw	-1
  2594     03D5  1D03               	skipz
  2595     03D6  2BD2               	goto	u1135
  2596     03D7  0875               	movf	??_mostrar_fecha,w
  2597     03D8  3E30               	addlw	48
  2598     03D9  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2599                           
  2600                           ;master.c: 223:     Lcd_Write_Char((dia & 0x0F)+0x30);
  2601     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2602     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2603     03E0  0824               	movf	_dia,w
  2604     03E1  390F               	andlw	15
  2605     03E2  3E30               	addlw	48
  2606     03E3  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2607                           
  2608                           ;master.c: 224:     Lcd_Write_Char('/');
  2609     03E8  302F               	movlw	47
  2610     03E9  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2611                           
  2612                           ;master.c: 225:     Lcd_Write_Char((mes>>4)+0x30);
  2613     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2614     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2615     03F0  0823               	movf	_mes,w
  2616     03F1  00F5               	movwf	??_mostrar_fecha
  2617     03F2  3004               	movlw	4
  2618     03F3                     u1145:
  2619     03F3  1003               	clrc
  2620     03F4  0CF5               	rrf	??_mostrar_fecha,f
  2621     03F5  3EFF               	addlw	-1
  2622     03F6  1D03               	skipz
  2623     03F7  2BF3               	goto	u1145
  2624     03F8  0875               	movf	??_mostrar_fecha,w
  2625     03F9  3E30               	addlw	48
  2626     03FA  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2627                           
  2628                           ;master.c: 226:     Lcd_Write_Char((mes & 0x0F)+0x30);
  2629     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2630     0400  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0401  0823               	movf	_mes,w
  2632     0402  390F               	andlw	15
  2633     0403  3E30               	addlw	48
  2634     0404  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2635                           
  2636                           ;master.c: 227:     Lcd_Write_Char ('/');
  2637     0409  302F               	movlw	47
  2638     040A  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2639                           
  2640                           ;master.c: 228:     Lcd_Write_Char ((anio>>4)+0x30);
  2641     040F  1283               	bcf	3,5	;RP0=0, select bank0
  2642     0410  1303               	bcf	3,6	;RP1=0, select bank0
  2643     0411  0822               	movf	_anio,w
  2644     0412  00F5               	movwf	??_mostrar_fecha
  2645     0413  3004               	movlw	4
  2646     0414                     u1155:
  2647     0414  1003               	clrc
  2648     0415  0CF5               	rrf	??_mostrar_fecha,f
  2649     0416  3EFF               	addlw	-1
  2650     0417  1D03               	skipz
  2651     0418  2C14               	goto	u1155
  2652     0419  0875               	movf	??_mostrar_fecha,w
  2653     041A  3E30               	addlw	48
  2654     041B  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2655                           
  2656                           ;master.c: 229:     Lcd_Write_Char ((anio & 0x0F)+0x30);
  2657     0420  1283               	bcf	3,5	;RP0=0, select bank0
  2658     0421  1303               	bcf	3,6	;RP1=0, select bank0
  2659     0422  0822               	movf	_anio,w
  2660     0423  390F               	andlw	15
  2661     0424  3E30               	addlw	48
  2662     0425  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  2663     042A                     l135:
  2664     042A  0008               	return
  2665     042B                     __end_of_mostrar_fecha:
  2666                           
  2667                           	psect	text12
  2668     033B                     __ptext12:	
  2669 ;; *************** function _leer_fecha *****************
  2670 ;; Defined at:
  2671 ;;		line 192 in file "master.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0
  2688 ;;      Totals:         0       0       0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 1
  2692 ;; This function calls:
  2693 ;;		_I2C_Ack
  2694 ;;		_I2C_Nack
  2695 ;;		_I2C_Read
  2696 ;;		_I2C_Restart
  2697 ;;		_I2C_Start
  2698 ;;		_I2C_Stop
  2699 ;;		_I2C_Write
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;;		_configuracion
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706     033B                     _leer_fecha:	
  2707                           ;psect for function _leer_fecha
  2708                           
  2709     033B                     l1654:	
  2710                           ;incstack = 0
  2711                           ; Regs used in _leer_fecha: [wreg+status,2+status,0+pclath+cstack]
  2712                           
  2713                           
  2714                           ;master.c: 194:     I2C_Start();
  2715     033B  120A  118A  2052  120A  118A  	fcall	_I2C_Start
  2716     0340                     l1656:
  2717                           
  2718                           ;master.c: 195:     I2C_Write(0xD0);
  2719     0340  30D0               	movlw	208
  2720     0341  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  2721     0346                     l1658:
  2722                           
  2723                           ;master.c: 196:     I2C_Write(0x04);
  2724     0346  3004               	movlw	4
  2725     0347  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  2726                           
  2727                           ;master.c: 197:     I2C_Restart();
  2728     034C  120A  118A  2066  120A  118A  	fcall	_I2C_Restart
  2729     0351                     l1660:
  2730                           
  2731                           ;master.c: 198:     I2C_Write(0xD1);
  2732     0351  30D1               	movlw	209
  2733     0352  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  2734     0357                     l1662:
  2735                           
  2736                           ;master.c: 199:     dia = I2C_Read();
  2737     0357  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  2738     035C  1283               	bcf	3,5	;RP0=0, select bank0
  2739     035D  1303               	bcf	3,6	;RP1=0, select bank0
  2740     035E  00A4               	movwf	_dia
  2741     035F                     l1664:
  2742                           
  2743                           ;master.c: 200:     I2C_Ack();
  2744     035F  120A  118A  2070  120A  118A  	fcall	_I2C_Ack
  2745     0364                     l1666:
  2746                           
  2747                           ;master.c: 201:     mes = I2C_Read();
  2748     0364  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  2749     0369  1283               	bcf	3,5	;RP0=0, select bank0
  2750     036A  1303               	bcf	3,6	;RP1=0, select bank0
  2751     036B  00A3               	movwf	_mes
  2752     036C                     l1668:
  2753                           
  2754                           ;master.c: 202:     I2C_Ack();
  2755     036C  120A  118A  2070  120A  118A  	fcall	_I2C_Ack
  2756     0371                     l1670:
  2757                           
  2758                           ;master.c: 203:     anio = I2C_Read();
  2759     0371  120A  118A  2086  120A  118A  	fcall	_I2C_Read
  2760     0376  1283               	bcf	3,5	;RP0=0, select bank0
  2761     0377  1303               	bcf	3,6	;RP1=0, select bank0
  2762     0378  00A2               	movwf	_anio
  2763     0379                     l1672:
  2764                           
  2765                           ;master.c: 204:     I2C_Nack();
  2766     0379  120A  118A  207B  120A  118A  	fcall	_I2C_Nack
  2767     037E                     l1674:
  2768                           
  2769                           ;master.c: 205:     I2C_Stop();
  2770     037E  120A  118A  205C  120A  118A  	fcall	_I2C_Stop
  2771     0383                     l129:
  2772     0383  0008               	return
  2773     0384                     __end_of_leer_fecha:
  2774                           
  2775                           	psect	text13
  2776     0066                     __ptext13:	
  2777 ;; *************** function _I2C_Restart *****************
  2778 ;; Defined at:
  2779 ;;		line 33 in file "I2C.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		None
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_leer_hora
  2803 ;;		_leer_fecha
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     0066                     _I2C_Restart:	
  2808                           ;psect for function _I2C_Restart
  2809                           
  2810     0066                     l1462:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _I2C_Restart: []
  2813                           
  2814                           
  2815                           ;I2C.c: 35:     SSPCON2bits.RSEN = 1;
  2816     0066  1683               	bsf	3,5	;RP0=1, select bank1
  2817     0067  1303               	bcf	3,6	;RP1=0, select bank1
  2818     0068  1491               	bsf	17,1	;volatile
  2819     0069                     l181:	
  2820                           ;I2C.c: 36:     while(PIR1bits.SSPIF == 0);
  2821                           
  2822     0069  1283               	bcf	3,5	;RP0=0, select bank0
  2823     006A  1D8C               	btfss	12,3	;volatile
  2824     006B  286D               	goto	u811
  2825     006C  286E               	goto	u810
  2826     006D                     u811:
  2827     006D  2869               	goto	l181
  2828     006E                     u810:
  2829     006E                     l183:
  2830                           
  2831                           ;I2C.c: 37:     PIR1bits.SSPIF = 0;
  2832     006E  118C               	bcf	12,3	;volatile
  2833     006F                     l184:
  2834     006F  0008               	return
  2835     0070                     __end_of_I2C_Restart:
  2836                           
  2837                           	psect	text14
  2838     0086                     __ptext14:	
  2839 ;; *************** function _I2C_Read *****************
  2840 ;; Defined at:
  2841 ;;		line 65 in file "I2C.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      unsigned char 
  2848 ;; Registers used:
  2849 ;;		wreg
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;;		_leer_hora
  2866 ;;		_leer_fecha
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870     0086                     _I2C_Read:	
  2871                           ;psect for function _I2C_Read
  2872                           
  2873     0086                     l1454:	
  2874                           ;incstack = 0
  2875                           ; Regs used in _I2C_Read: [wreg]
  2876                           
  2877                           
  2878                           ;I2C.c: 67:     SSPCON2bits.RCEN = 1;
  2879     0086  1683               	bsf	3,5	;RP0=1, select bank1
  2880     0087  1303               	bcf	3,6	;RP1=0, select bank1
  2881     0088  1591               	bsf	17,3	;volatile
  2882     0089                     l205:	
  2883                           ;I2C.c: 68:     while(PIR1bits.SSPIF == 0);
  2884                           
  2885     0089  1283               	bcf	3,5	;RP0=0, select bank0
  2886     008A  1D8C               	btfss	12,3	;volatile
  2887     008B  288D               	goto	u791
  2888     008C  288E               	goto	u790
  2889     008D                     u791:
  2890     008D  2889               	goto	l205
  2891     008E                     u790:
  2892     008E                     l207:
  2893                           
  2894                           ;I2C.c: 69:     PIR1bits.SSPIF = 0;
  2895     008E  118C               	bcf	12,3	;volatile
  2896     008F                     l1456:
  2897                           
  2898                           ;I2C.c: 70:     return SSPBUF;
  2899     008F  0813               	movf	19,w	;volatile
  2900     0090                     l208:
  2901     0090  0008               	return
  2902     0091                     __end_of_I2C_Read:
  2903                           
  2904                           	psect	text15
  2905     007B                     __ptext15:	
  2906 ;; *************** function _I2C_Nack *****************
  2907 ;; Defined at:
  2908 ;;		line 48 in file "I2C.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		None
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_leer_hora
  2932 ;;		_leer_fecha
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936     007B                     _I2C_Nack:	
  2937                           ;psect for function _I2C_Nack
  2938                           
  2939     007B                     l1466:	
  2940                           ;incstack = 0
  2941                           ; Regs used in _I2C_Nack: []
  2942                           
  2943                           
  2944                           ;I2C.c: 50:     SSPCON2bits.ACKDT = 1;
  2945     007B  1683               	bsf	3,5	;RP0=1, select bank1
  2946     007C  1303               	bcf	3,6	;RP1=0, select bank1
  2947     007D  1691               	bsf	17,5	;volatile
  2948                           
  2949                           ;I2C.c: 51:  SSPCON2bits.ACKEN = 1;
  2950     007E  1611               	bsf	17,4	;volatile
  2951     007F                     l193:	
  2952                           ;I2C.c: 52:  while(PIR1bits.SSPIF == 0);
  2953                           
  2954     007F  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0080  1D8C               	btfss	12,3	;volatile
  2956     0081  2883               	goto	u831
  2957     0082  2884               	goto	u830
  2958     0083                     u831:
  2959     0083  287F               	goto	l193
  2960     0084                     u830:
  2961     0084                     l195:
  2962                           
  2963                           ;I2C.c: 53:     PIR1bits.SSPIF = 0;
  2964     0084  118C               	bcf	12,3	;volatile
  2965     0085                     l196:
  2966     0085  0008               	return
  2967     0086                     __end_of_I2C_Nack:
  2968                           
  2969                           	psect	text16
  2970     0070                     __ptext16:	
  2971 ;; *************** function _I2C_Ack *****************
  2972 ;; Defined at:
  2973 ;;		line 40 in file "I2C.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		None
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_leer_hora
  2997 ;;		_leer_fecha
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001     0070                     _I2C_Ack:	
  3002                           ;psect for function _I2C_Ack
  3003                           
  3004     0070                     l1464:	
  3005                           ;incstack = 0
  3006                           ; Regs used in _I2C_Ack: []
  3007                           
  3008                           
  3009                           ;I2C.c: 42:     SSPCON2bits.ACKDT = 0;
  3010     0070  1683               	bsf	3,5	;RP0=1, select bank1
  3011     0071  1303               	bcf	3,6	;RP1=0, select bank1
  3012     0072  1291               	bcf	17,5	;volatile
  3013                           
  3014                           ;I2C.c: 43:  SSPCON2bits.ACKEN = 1;
  3015     0073  1611               	bsf	17,4	;volatile
  3016     0074                     l187:	
  3017                           ;I2C.c: 44:  while(PIR1bits.SSPIF == 0);
  3018                           
  3019     0074  1283               	bcf	3,5	;RP0=0, select bank0
  3020     0075  1D8C               	btfss	12,3	;volatile
  3021     0076  2878               	goto	u821
  3022     0077  2879               	goto	u820
  3023     0078                     u821:
  3024     0078  2874               	goto	l187
  3025     0079                     u820:
  3026     0079                     l189:
  3027                           
  3028                           ;I2C.c: 45:     PIR1bits.SSPIF = 0;
  3029     0079  118C               	bcf	12,3	;volatile
  3030     007A                     l190:
  3031     007A  0008               	return
  3032     007B                     __end_of_I2C_Ack:
  3033                           
  3034                           	psect	text17
  3035     017A                     __ptext17:	
  3036 ;; *************** function _enviar_fecha *****************
  3037 ;; Defined at:
  3038 ;;		line 181 in file "master.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0
  3055 ;;      Totals:         0       0       0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 1
  3059 ;; This function calls:
  3060 ;;		_I2C_Start
  3061 ;;		_I2C_Stop
  3062 ;;		_I2C_Write
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;;		_configuracion
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069     017A                     _enviar_fecha:	
  3070                           ;psect for function _enviar_fecha
  3071                           
  3072     017A                     l1588:	
  3073                           ;incstack = 0
  3074                           ; Regs used in _enviar_fecha: [wreg+status,2+status,0+pclath+cstack]
  3075                           
  3076                           
  3077                           ;master.c: 183:     I2C_Start();
  3078     017A  120A  118A  2052  120A  118A  	fcall	_I2C_Start
  3079     017F                     l1590:
  3080                           
  3081                           ;master.c: 184:     I2C_Write(0xD0);
  3082     017F  30D0               	movlw	208
  3083     0180  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  3084     0185                     l1592:
  3085                           
  3086                           ;master.c: 185:     I2C_Write(0x04);
  3087     0185  3004               	movlw	4
  3088     0186  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  3089     018B                     l1594:
  3090                           
  3091                           ;master.c: 186:     I2C_Write(dia);
  3092     018B  1283               	bcf	3,5	;RP0=0, select bank0
  3093     018C  1303               	bcf	3,6	;RP1=0, select bank0
  3094     018D  0824               	movf	_dia,w
  3095     018E  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  3096     0193                     l1596:
  3097                           
  3098                           ;master.c: 187:     I2C_Write(mes);
  3099     0193  1283               	bcf	3,5	;RP0=0, select bank0
  3100     0194  1303               	bcf	3,6	;RP1=0, select bank0
  3101     0195  0823               	movf	_mes,w
  3102     0196  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  3103     019B                     l1598:
  3104                           
  3105                           ;master.c: 188:     I2C_Write(anio);
  3106     019B  1283               	bcf	3,5	;RP0=0, select bank0
  3107     019C  1303               	bcf	3,6	;RP1=0, select bank0
  3108     019D  0822               	movf	_anio,w
  3109     019E  120A  118A  209E  120A  118A  	fcall	_I2C_Write
  3110     01A3                     l1600:
  3111                           
  3112                           ;master.c: 189:     I2C_Stop();
  3113     01A3  120A  118A  205C  120A  118A  	fcall	_I2C_Stop
  3114     01A8                     l126:
  3115     01A8  0008               	return
  3116     01A9                     __end_of_enviar_fecha:
  3117                           
  3118                           	psect	text18
  3119     009E                     __ptext18:	
  3120 ;; *************** function _I2C_Write *****************
  3121 ;; Defined at:
  3122 ;;		line 56 in file "I2C.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  data            1    wreg     unsigned char 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  data            1    0[COMMON] unsigned char 
  3127 ;;  b_ok            2    0        short 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2   26[None  ] short 
  3130 ;; Registers used:
  3131 ;;		wreg
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       0       0       0       0
  3138 ;;      Locals:         1       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0
  3140 ;;      Totals:         1       0       0       0       0
  3141 ;;Total ram usage:        1 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;;		_enviar_hora
  3148 ;;		_leer_hora
  3149 ;;		_enviar_fecha
  3150 ;;		_leer_fecha
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154     009E                     _I2C_Write:	
  3155                           ;psect for function _I2C_Write
  3156                           
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _I2C_Write: [wreg]
  3160                           ;I2C_Write@data stored from wreg
  3161     009E  00F0               	movwf	I2C_Write@data
  3162     009F                     l1448:
  3163                           
  3164                           ;I2C.c: 56: short I2C_Write(char data);I2C.c: 57: {;I2C.c: 58:     SSPBUF = data;
  3165     009F  0870               	movf	I2C_Write@data,w
  3166     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  3167     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  3168     00A2  0093               	movwf	19	;volatile
  3169     00A3                     l199:	
  3170                           ;I2C.c: 59:     while(PIR1bits.SSPIF == 0);
  3171                           
  3172     00A3  1D8C               	btfss	12,3	;volatile
  3173     00A4  28A6               	goto	u781
  3174     00A5  28A7               	goto	u780
  3175     00A6                     u781:
  3176     00A6  28A3               	goto	l199
  3177     00A7                     u780:
  3178     00A7                     l201:
  3179                           
  3180                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  3181     00A7  118C               	bcf	12,3	;volatile
  3182     00A8                     l1450:
  3183     00A8  1683               	bsf	3,5	;RP0=1, select bank1
  3184     00A9  1303               	bcf	3,6	;RP1=0, select bank1
  3185     00AA  0811               	movf	17,w	;volatile
  3186     00AB                     l202:
  3187     00AB  0008               	return
  3188     00AC                     __end_of_I2C_Write:
  3189                           
  3190                           	psect	text19
  3191     005C                     __ptext19:	
  3192 ;; *************** function _I2C_Stop *****************
  3193 ;; Defined at:
  3194 ;;		line 26 in file "I2C.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		None
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;;		_enviar_hora
  3219 ;;		_leer_hora
  3220 ;;		_enviar_fecha
  3221 ;;		_leer_fecha
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225     005C                     _I2C_Stop:	
  3226                           ;psect for function _I2C_Stop
  3227                           
  3228     005C                     l1460:	
  3229                           ;incstack = 0
  3230                           ; Regs used in _I2C_Stop: []
  3231                           
  3232                           
  3233                           ;I2C.c: 28:     SSPCON2bits.PEN = 1;
  3234     005C  1683               	bsf	3,5	;RP0=1, select bank1
  3235     005D  1303               	bcf	3,6	;RP1=0, select bank1
  3236     005E  1511               	bsf	17,2	;volatile
  3237     005F                     l175:	
  3238                           ;I2C.c: 29:     while(PIR1bits.SSPIF == 0);
  3239                           
  3240     005F  1283               	bcf	3,5	;RP0=0, select bank0
  3241     0060  1D8C               	btfss	12,3	;volatile
  3242     0061  2863               	goto	u801
  3243     0062  2864               	goto	u800
  3244     0063                     u801:
  3245     0063  285F               	goto	l175
  3246     0064                     u800:
  3247     0064                     l177:
  3248                           
  3249                           ;I2C.c: 30:     PIR1bits.SSPIF = 0;
  3250     0064  118C               	bcf	12,3	;volatile
  3251     0065                     l178:
  3252     0065  0008               	return
  3253     0066                     __end_of_I2C_Stop:
  3254                           
  3255                           	psect	text20
  3256     0052                     __ptext20:	
  3257 ;; *************** function _I2C_Start *****************
  3258 ;; Defined at:
  3259 ;;		line 19 in file "I2C.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		None
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;;		_enviar_hora
  3284 ;;		_leer_hora
  3285 ;;		_enviar_fecha
  3286 ;;		_leer_fecha
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290     0052                     _I2C_Start:	
  3291                           ;psect for function _I2C_Start
  3292                           
  3293     0052                     l1446:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _I2C_Start: []
  3296                           
  3297                           
  3298                           ;I2C.c: 21:     SSPCON2bits.SEN = 1;
  3299     0052  1683               	bsf	3,5	;RP0=1, select bank1
  3300     0053  1303               	bcf	3,6	;RP1=0, select bank1
  3301     0054  1411               	bsf	17,0	;volatile
  3302     0055                     l169:	
  3303                           ;I2C.c: 22:     while(PIR1bits.SSPIF == 0);
  3304                           
  3305     0055  1283               	bcf	3,5	;RP0=0, select bank0
  3306     0056  1D8C               	btfss	12,3	;volatile
  3307     0057  2859               	goto	u771
  3308     0058  285A               	goto	u770
  3309     0059                     u771:
  3310     0059  2855               	goto	l169
  3311     005A                     u770:
  3312     005A                     l171:
  3313                           
  3314                           ;I2C.c: 23:     PIR1bits.SSPIF = 0;
  3315     005A  118C               	bcf	12,3	;volatile
  3316     005B                     l172:
  3317     005B  0008               	return
  3318     005C                     __end_of_I2C_Start:
  3319                           
  3320                           	psect	text21
  3321     020D                     __ptext21:	
  3322 ;; *************** function _convertirFecha *****************
  3323 ;; Defined at:
  3324 ;;		line 143 in file "master.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  i               1    1[COMMON] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         1       0       0       0       0
  3340 ;;      Temps:          1       0       0       0       0
  3341 ;;      Totals:         2       0       0       0       0
  3342 ;;Total ram usage:        2 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;;		_configuracion
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352     020D                     _convertirFecha:	
  3353                           ;psect for function _convertirFecha
  3354                           
  3355     020D                     l1574:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _convertirFecha: [wreg-fsr0h+status,2+status,0]
  3358                           
  3359                           
  3360                           ;master.c: 145:     for(uint8_t i=0; i<7; i++){
  3361     020D  01F1               	clrf	convertirFecha@i
  3362     020E                     l1580:
  3363                           
  3364                           ;master.c: 146:         Fecha[i] &= 0x0F;
  3365     020E  300F               	movlw	15
  3366     020F  00F0               	movwf	??_convertirFecha
  3367     0210  0871               	movf	convertirFecha@i,w
  3368     0211  3E58               	addlw	(low (_Fecha| 0))& (0+255)
  3369     0212  0084               	movwf	4
  3370     0213  0870               	movf	??_convertirFecha,w
  3371     0214  1383               	bcf	3,7	;select IRP bank0
  3372     0215  0580               	andwf	0,f
  3373     0216                     l1582:
  3374                           
  3375                           ;master.c: 147:     }
  3376     0216  3001               	movlw	1
  3377     0217  00F0               	movwf	??_convertirFecha
  3378     0218  0870               	movf	??_convertirFecha,w
  3379     0219  07F1               	addwf	convertirFecha@i,f
  3380     021A                     l1584:
  3381     021A  3007               	movlw	7
  3382     021B  0271               	subwf	convertirFecha@i,w
  3383     021C  1C03               	skipc
  3384     021D  2A1F               	goto	u1041
  3385     021E  2A20               	goto	u1040
  3386     021F                     u1041:
  3387     021F  2A0E               	goto	l1580
  3388     0220                     u1040:
  3389     0220                     l1586:
  3390                           
  3391                           ;master.c: 149:     dia = ((Fecha[0]<<4)+ Fecha[1]);
  3392     0220  1283               	bcf	3,5	;RP0=0, select bank0
  3393     0221  1303               	bcf	3,6	;RP1=0, select bank0
  3394     0222  0858               	movf	_Fecha,w
  3395     0223  00F0               	movwf	??_convertirFecha
  3396     0224  3004               	movlw	4
  3397     0225                     u1055:
  3398     0225  1003               	clrc
  3399     0226  0DF0               	rlf	??_convertirFecha,f
  3400     0227  3EFF               	addlw	-1
  3401     0228  1D03               	skipz
  3402     0229  2A25               	goto	u1055
  3403     022A  0859               	movf	_Fecha+1,w
  3404     022B  0770               	addwf	??_convertirFecha,w
  3405     022C  00A4               	movwf	_dia
  3406                           
  3407                           ;master.c: 150:     mes = ((Fecha[2]<<4)+ Fecha[3]);
  3408     022D  085A               	movf	_Fecha+2,w
  3409     022E  00F0               	movwf	??_convertirFecha
  3410     022F  3004               	movlw	4
  3411     0230                     u1065:
  3412     0230  1003               	clrc
  3413     0231  0DF0               	rlf	??_convertirFecha,f
  3414     0232  3EFF               	addlw	-1
  3415     0233  1D03               	skipz
  3416     0234  2A30               	goto	u1065
  3417     0235  085B               	movf	_Fecha+3,w
  3418     0236  0770               	addwf	??_convertirFecha,w
  3419     0237  00A3               	movwf	_mes
  3420                           
  3421                           ;master.c: 151:     anio = ((Fecha[4]<<4)+ Fecha[5]);
  3422     0238  085C               	movf	_Fecha+4,w
  3423     0239  00F0               	movwf	??_convertirFecha
  3424     023A  3004               	movlw	4
  3425     023B                     u1075:
  3426     023B  1003               	clrc
  3427     023C  0DF0               	rlf	??_convertirFecha,f
  3428     023D  3EFF               	addlw	-1
  3429     023E  1D03               	skipz
  3430     023F  2A3B               	goto	u1075
  3431     0240  085D               	movf	_Fecha+5,w
  3432     0241  0770               	addwf	??_convertirFecha,w
  3433     0242  00A2               	movwf	_anio
  3434     0243                     l117:
  3435     0243  0008               	return
  3436     0244                     __end_of_convertirFecha:
  3437                           
  3438                           	psect	text22
  3439     054F                     __ptext22:	
  3440 ;; *************** function _atoi *****************
  3441 ;; Defined at:
  3442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\atoi.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  s               1    wreg     PTR const unsigned char 
  3445 ;;		 -> Fecha(7), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  s               1   13[COMMON] PTR const unsigned char 
  3448 ;;		 -> Fecha(7), 
  3449 ;;  a               2   11[COMMON] int 
  3450 ;;  sign            1   10[COMMON] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2    6[COMMON] int 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         2       0       0       0       0
  3461 ;;      Locals:         4       0       0       0       0
  3462 ;;      Temps:          2       0       0       0       0
  3463 ;;      Totals:         8       0       0       0       0
  3464 ;;Total ram usage:        8 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 1
  3467 ;; This function calls:
  3468 ;;		___wmul
  3469 ;;		_isdigit
  3470 ;; This function is called by:
  3471 ;;		_configuracion
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475     054F                     _atoi:	
  3476                           ;psect for function _atoi
  3477                           
  3478                           
  3479                           ;incstack = 0
  3480                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3481                           ;atoi@s stored from wreg
  3482     054F  00FD               	movwf	atoi@s
  3483     0550                     l1692:
  3484     0550  2D55               	goto	l1696
  3485     0551                     l1694:
  3486     0551  3001               	movlw	1
  3487     0552  00F8               	movwf	??_atoi
  3488     0553  0878               	movf	??_atoi,w
  3489     0554  07FD               	addwf	atoi@s,f
  3490     0555                     l1696:
  3491     0555  087D               	movf	atoi@s,w
  3492     0556  0084               	movwf	4
  3493     0557  3020               	movlw	32
  3494     0558  1383               	bcf	3,7	;select IRP bank0
  3495     0559  0600               	xorwf	0,w
  3496     055A  1903               	btfsc	3,2
  3497     055B  2D5D               	goto	u1181
  3498     055C  2D5E               	goto	u1180
  3499     055D                     u1181:
  3500     055D  2D51               	goto	l1694
  3501     055E                     u1180:
  3502     055E                     l1698:
  3503     055E  087D               	movf	atoi@s,w
  3504     055F  0084               	movwf	4
  3505     0560  3009               	movlw	9
  3506     0561  0600               	xorwf	0,w
  3507     0562  1903               	btfsc	3,2
  3508     0563  2D65               	goto	u1191
  3509     0564  2D66               	goto	u1190
  3510     0565                     u1191:
  3511     0565  2D51               	goto	l1694
  3512     0566                     u1190:
  3513     0566                     l1700:
  3514     0566  01FB               	clrf	atoi@a
  3515     0567  01FC               	clrf	atoi@a+1
  3516     0568  01FA               	clrf	atoi@sign
  3517     0569                     l1702:
  3518     0569  087D               	movf	atoi@s,w
  3519     056A  0084               	movwf	4
  3520     056B  302D               	movlw	45
  3521     056C  0600               	xorwf	0,w
  3522     056D  1D03               	btfss	3,2
  3523     056E  2D70               	goto	u1201
  3524     056F  2D71               	goto	u1200
  3525     0570                     u1201:
  3526     0570  2D7A               	goto	l1706
  3527     0571                     u1200:
  3528     0571                     l1704:
  3529     0571  3001               	movlw	1
  3530     0572  00F8               	movwf	??_atoi
  3531     0573  0878               	movf	??_atoi,w
  3532     0574  07FA               	addwf	atoi@sign,f
  3533     0575  3001               	movlw	1
  3534     0576  00F8               	movwf	??_atoi
  3535     0577  0878               	movf	??_atoi,w
  3536     0578  07FD               	addwf	atoi@s,f
  3537     0579  2DA8               	goto	l1714
  3538     057A                     l1706:
  3539     057A  087D               	movf	atoi@s,w
  3540     057B  0084               	movwf	4
  3541     057C  302B               	movlw	43
  3542     057D  0600               	xorwf	0,w
  3543     057E  1D03               	btfss	3,2
  3544     057F  2D81               	goto	u1211
  3545     0580  2D82               	goto	u1210
  3546     0581                     u1211:
  3547     0581  2DA8               	goto	l1714
  3548     0582                     u1210:
  3549     0582                     l1708:
  3550     0582  3001               	movlw	1
  3551     0583  00F8               	movwf	??_atoi
  3552     0584  0878               	movf	??_atoi,w
  3553     0585  07FD               	addwf	atoi@s,f
  3554     0586  2DA8               	goto	l1714
  3555     0587                     l1710:
  3556     0587  087D               	movf	atoi@s,w
  3557     0588  0084               	movwf	4
  3558     0589  087C               	movf	atoi@a+1,w
  3559     058A  00F1               	movwf	___wmul@multiplier+1
  3560     058B  087B               	movf	atoi@a,w
  3561     058C  00F0               	movwf	___wmul@multiplier
  3562     058D  300A               	movlw	10
  3563     058E  00F2               	movwf	___wmul@multiplicand
  3564     058F  3000               	movlw	0
  3565     0590  00F3               	movwf	___wmul@multiplicand+1
  3566     0591  120A  118A  2155  120A  118A  	fcall	___wmul
  3567     0596  1383               	bcf	3,7	;select IRP bank0
  3568     0597  0800               	movf	0,w
  3569     0598  0770               	addwf	?___wmul,w
  3570     0599  00F8               	movwf	??_atoi
  3571     059A  3000               	movlw	0
  3572     059B  1803               	skipnc
  3573     059C  3001               	movlw	1
  3574     059D  0771               	addwf	?___wmul+1,w
  3575     059E  00F9               	movwf	??_atoi+1
  3576     059F  0878               	movf	??_atoi,w
  3577     05A0  3ED0               	addlw	208
  3578     05A1  00FB               	movwf	atoi@a
  3579     05A2  0879               	movf	??_atoi+1,w
  3580     05A3  1803               	skipnc
  3581     05A4  3E01               	addlw	1
  3582     05A5  3EFF               	addlw	255
  3583     05A6  00FC               	movwf	atoi@a+1
  3584     05A7  2D82               	goto	l1708
  3585     05A8                     l1714:
  3586     05A8  087D               	movf	atoi@s,w
  3587     05A9  0084               	movwf	4
  3588     05AA  0800               	movf	0,w
  3589     05AB  120A  118A  20BA  120A  118A  	fcall	_isdigit
  3590     05B0  1803               	btfsc	3,0
  3591     05B1  2DB3               	goto	u1221
  3592     05B2  2DB4               	goto	u1220
  3593     05B3                     u1221:
  3594     05B3  2D87               	goto	l1710
  3595     05B4                     u1220:
  3596     05B4                     l1716:
  3597     05B4  087A               	movf	atoi@sign,w
  3598     05B5  1903               	btfsc	3,2
  3599     05B6  2DB8               	goto	u1231
  3600     05B7  2DB9               	goto	u1230
  3601     05B8                     u1231:
  3602     05B8  2DC5               	goto	l1722
  3603     05B9                     u1230:
  3604     05B9                     l1718:
  3605     05B9  097B               	comf	atoi@a,w
  3606     05BA  00F8               	movwf	??_atoi
  3607     05BB  097C               	comf	atoi@a+1,w
  3608     05BC  00F9               	movwf	??_atoi+1
  3609     05BD  0AF8               	incf	??_atoi,f
  3610     05BE  1903               	skipnz
  3611     05BF  0AF9               	incf	??_atoi+1,f
  3612     05C0  0878               	movf	??_atoi,w
  3613     05C1  00F6               	movwf	?_atoi
  3614     05C2  0879               	movf	??_atoi+1,w
  3615     05C3  00F7               	movwf	?_atoi+1
  3616     05C4  2DC9               	goto	l847
  3617     05C5                     l1722:
  3618     05C5  087C               	movf	atoi@a+1,w
  3619     05C6  00F7               	movwf	?_atoi+1
  3620     05C7  087B               	movf	atoi@a,w
  3621     05C8  00F6               	movwf	?_atoi
  3622     05C9                     l847:
  3623     05C9  0008               	return
  3624     05CA                     __end_of_atoi:
  3625                           
  3626                           	psect	text23
  3627     00BA                     __ptext23:	
  3628 ;; *************** function _isdigit *****************
  3629 ;; Defined at:
  3630 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  c               1    wreg     unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  c               1    1[COMMON] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;		None               void
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         2       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0
  3647 ;;      Totals:         2       0       0       0       0
  3648 ;;Total ram usage:        2 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_atoi
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657     00BA                     _isdigit:	
  3658                           ;psect for function _isdigit
  3659                           
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3663                           ;isdigit@c stored from wreg
  3664     00BA  00F1               	movwf	isdigit@c
  3665     00BB                     l1560:
  3666     00BB  01F0               	clrf	_isdigit$888
  3667     00BC                     l1562:
  3668     00BC  303A               	movlw	58
  3669     00BD  0271               	subwf	isdigit@c,w
  3670     00BE  1803               	skipnc
  3671     00BF  28C1               	goto	u1021
  3672     00C0  28C2               	goto	u1020
  3673     00C1                     u1021:
  3674     00C1  28CA               	goto	l1568
  3675     00C2                     u1020:
  3676     00C2                     l1564:
  3677     00C2  3030               	movlw	48
  3678     00C3  0271               	subwf	isdigit@c,w
  3679     00C4  1C03               	skipc
  3680     00C5  28C7               	goto	u1031
  3681     00C6  28C8               	goto	u1030
  3682     00C7                     u1031:
  3683     00C7  28CA               	goto	l1568
  3684     00C8                     u1030:
  3685     00C8                     l1566:
  3686     00C8  01F0               	clrf	_isdigit$888
  3687     00C9  0AF0               	incf	_isdigit$888,f
  3688     00CA                     l1568:
  3689     00CA  0C70               	rrf	_isdigit$888,w
  3690     00CB                     l852:
  3691     00CB  0008               	return
  3692     00CC                     __end_of_isdigit:
  3693                           
  3694                           	psect	text24
  3695     0155                     __ptext24:	
  3696 ;; *************** function ___wmul *****************
  3697 ;; Defined at:
  3698 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  multiplier      2    0[COMMON] unsigned int 
  3701 ;;  multiplicand    2    2[COMMON] unsigned int 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  product         2    4[COMMON] unsigned int 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2    0[COMMON] unsigned int 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         4       0       0       0       0
  3714 ;;      Locals:         2       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         6       0       0       0       0
  3717 ;;Total ram usage:        6 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_atoi
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726     0155                     ___wmul:	
  3727                           ;psect for function ___wmul
  3728                           
  3729     0155                     l1498:	
  3730                           ;incstack = 0
  3731                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3732                           
  3733     0155  01F4               	clrf	___wmul@product
  3734     0156  01F5               	clrf	___wmul@product+1
  3735     0157                     l1500:
  3736     0157  1C70               	btfss	___wmul@multiplier,0
  3737     0158  295A               	goto	u851
  3738     0159  295B               	goto	u850
  3739     015A                     u851:
  3740     015A  2961               	goto	l384
  3741     015B                     u850:
  3742     015B                     l1502:
  3743     015B  0872               	movf	___wmul@multiplicand,w
  3744     015C  07F4               	addwf	___wmul@product,f
  3745     015D  1803               	skipnc
  3746     015E  0AF5               	incf	___wmul@product+1,f
  3747     015F  0873               	movf	___wmul@multiplicand+1,w
  3748     0160  07F5               	addwf	___wmul@product+1,f
  3749     0161                     l384:
  3750     0161  3001               	movlw	1
  3751     0162                     u865:
  3752     0162  1003               	clrc
  3753     0163  0DF2               	rlf	___wmul@multiplicand,f
  3754     0164  0DF3               	rlf	___wmul@multiplicand+1,f
  3755     0165  3EFF               	addlw	-1
  3756     0166  1D03               	skipz
  3757     0167  2962               	goto	u865
  3758     0168                     l1504:
  3759     0168  3001               	movlw	1
  3760     0169                     u875:
  3761     0169  1003               	clrc
  3762     016A  0CF1               	rrf	___wmul@multiplier+1,f
  3763     016B  0CF0               	rrf	___wmul@multiplier,f
  3764     016C  3EFF               	addlw	-1
  3765     016D  1D03               	skipz
  3766     016E  2969               	goto	u875
  3767     016F                     l1506:
  3768     016F  0870               	movf	___wmul@multiplier,w
  3769     0170  0471               	iorwf	___wmul@multiplier+1,w
  3770     0171  1D03               	btfss	3,2
  3771     0172  2974               	goto	u881
  3772     0173  2975               	goto	u880
  3773     0174                     u881:
  3774     0174  2957               	goto	l1500
  3775     0175                     u880:
  3776     0175                     l1508:
  3777     0175  0875               	movf	___wmul@product+1,w
  3778     0176  00F1               	movwf	?___wmul+1
  3779     0177  0874               	movf	___wmul@product,w
  3780     0178  00F0               	movwf	?___wmul
  3781     0179                     l386:
  3782     0179  0008               	return
  3783     017A                     __end_of___wmul:
  3784                           
  3785                           	psect	text25
  3786     02B5                     __ptext25:	
  3787 ;; *************** function _Lcd_Write_String *****************
  3788 ;; Defined at:
  3789 ;;		line 104 in file "LCD.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  a               2    5[COMMON] PTR const unsigned char 
  3792 ;;		 -> buffer(20), STR_1(5), 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  i               2   10[COMMON] int 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         2       0       0       0       0
  3805 ;;      Locals:         2       0       0       0       0
  3806 ;;      Temps:          3       0       0       0       0
  3807 ;;      Totals:         7       0       0       0       0
  3808 ;;Total ram usage:        7 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 2
  3811 ;; This function calls:
  3812 ;;		_Lcd_Write_Char
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818     02B5                     _Lcd_Write_String:	
  3819                           ;psect for function _Lcd_Write_String
  3820                           
  3821     02B5                     l1796:	
  3822                           ;incstack = 0
  3823                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3824                           
  3825                           
  3826                           ;LCD.c: 104: void Lcd_Write_String(const char *a);LCD.c: 105: {;LCD.c: 106:     int i;;L
      +                          CD.c: 107:     for(i=0;a[i]!='\0';i++)
  3827     02B5  01FA               	clrf	Lcd_Write_String@i
  3828     02B6  01FB               	clrf	Lcd_Write_String@i+1
  3829     02B7  2ADA               	goto	l1802
  3830     02B8                     l1798:
  3831                           
  3832                           ;LCD.c: 108:         Lcd_Write_Char(a[i]);
  3833     02B8  087A               	movf	Lcd_Write_String@i,w
  3834     02B9  0775               	addwf	Lcd_Write_String@a,w
  3835     02BA  00F8               	movwf	??_Lcd_Write_String+1
  3836     02BB  0876               	movf	Lcd_Write_String@a+1,w
  3837     02BC  00F7               	movwf	??_Lcd_Write_String
  3838     02BD  1803               	skipnc
  3839     02BE  0AF7               	incf	??_Lcd_Write_String,f
  3840     02BF  1FFA               	btfss	Lcd_Write_String@i,7
  3841     02C0  2AC2               	goto	u1320
  3842     02C1  03F7               	decf	??_Lcd_Write_String,f
  3843     02C2                     u1320:
  3844     02C2  0877               	movf	??_Lcd_Write_String,w
  3845     02C3  00F9               	movwf	??_Lcd_Write_String+2
  3846     02C4  0879               	movf	??_Lcd_Write_String+2,w
  3847     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  3848     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  3849     02C7  00FF               	movwf	btemp+1
  3850     02C8  0878               	movf	??_Lcd_Write_String+1,w
  3851     02C9  0084               	movwf	4
  3852     02CA  120A  118A  2003  120A  118A  	fcall	stringtab
  3853     02CF  120A  118A  21D8  120A  118A  	fcall	_Lcd_Write_Char
  3854     02D4                     l1800:
  3855     02D4  3001               	movlw	1
  3856     02D5  07FA               	addwf	Lcd_Write_String@i,f
  3857     02D6  1803               	skipnc
  3858     02D7  0AFB               	incf	Lcd_Write_String@i+1,f
  3859     02D8  3000               	movlw	0
  3860     02D9  07FB               	addwf	Lcd_Write_String@i+1,f
  3861     02DA                     l1802:
  3862     02DA  087A               	movf	Lcd_Write_String@i,w
  3863     02DB  0775               	addwf	Lcd_Write_String@a,w
  3864     02DC  00F8               	movwf	??_Lcd_Write_String+1
  3865     02DD  0876               	movf	Lcd_Write_String@a+1,w
  3866     02DE  00F7               	movwf	??_Lcd_Write_String
  3867     02DF  1803               	skipnc
  3868     02E0  0AF7               	incf	??_Lcd_Write_String,f
  3869     02E1  1FFA               	btfss	Lcd_Write_String@i,7
  3870     02E2  2AE4               	goto	u1330
  3871     02E3  03F7               	decf	??_Lcd_Write_String,f
  3872     02E4                     u1330:
  3873     02E4  0877               	movf	??_Lcd_Write_String,w
  3874     02E5  00F9               	movwf	??_Lcd_Write_String+2
  3875     02E6  0879               	movf	??_Lcd_Write_String+2,w
  3876     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  3877     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  3878     02E9  00FF               	movwf	btemp+1
  3879     02EA  0878               	movf	??_Lcd_Write_String+1,w
  3880     02EB  0084               	movwf	4
  3881     02EC  120A  118A  2003  120A  118A  	fcall	stringtab
  3882     02F1  3A00               	xorlw	0
  3883     02F2  1D03               	skipz
  3884     02F3  2AF5               	goto	u1341
  3885     02F4  2AF6               	goto	u1340
  3886     02F5                     u1341:
  3887     02F5  2AB8               	goto	l1798
  3888     02F6                     u1340:
  3889     02F6                     l261:
  3890     02F6  0008               	return
  3891     02F7                     __end_of_Lcd_Write_String:
  3892                           
  3893                           	psect	text26
  3894     01D8                     __ptext26:	
  3895 ;; *************** function _Lcd_Write_Char *****************
  3896 ;; Defined at:
  3897 ;;		line 88 in file "LCD.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  a               1    wreg     unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  a               1    4[COMMON] unsigned char 
  3902 ;;  y               1    3[COMMON] unsigned char 
  3903 ;;  temp            1    2[COMMON] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3913 ;;      Params:         0       0       0       0       0
  3914 ;;      Locals:         3       0       0       0       0
  3915 ;;      Temps:          1       0       0       0       0
  3916 ;;      Totals:         4       0       0       0       0
  3917 ;;Total ram usage:        4 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 1
  3920 ;; This function calls:
  3921 ;;		_Lcd_Port
  3922 ;; This function is called by:
  3923 ;;		_mostrar_hora
  3924 ;;		_mostrar_fecha
  3925 ;;		_Lcd_Write_String
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     01D8                     _Lcd_Write_Char:	
  3930                           ;psect for function _Lcd_Write_Char
  3931                           
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3935                           ;Lcd_Write_Char@a stored from wreg
  3936     01D8  00F4               	movwf	Lcd_Write_Char@a
  3937     01D9                     l1468:
  3938                           
  3939                           ;LCD.c: 88: void Lcd_Write_Char(char a);LCD.c: 89: {;LCD.c: 90:     char temp,y;;LCD.c: 
      +                          91:     temp = a&0x0F;
  3940     01D9  0874               	movf	Lcd_Write_Char@a,w
  3941     01DA  390F               	andlw	15
  3942     01DB  00F2               	movwf	Lcd_Write_Char@temp
  3943                           
  3944                           ;LCD.c: 92:     y = a&0xF0;
  3945     01DC  0874               	movf	Lcd_Write_Char@a,w
  3946     01DD  39F0               	andlw	240
  3947     01DE  00F3               	movwf	Lcd_Write_Char@y
  3948     01DF                     l1470:
  3949                           
  3950                           ;LCD.c: 93:     PORTDbits.RD2 = 1;
  3951     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3952     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3953     01E1  1508               	bsf	8,2	;volatile
  3954     01E2                     l1472:
  3955                           
  3956                           ;LCD.c: 94:     Lcd_Port(y>>4);
  3957     01E2  0873               	movf	Lcd_Write_Char@y,w
  3958     01E3  00F1               	movwf	??_Lcd_Write_Char
  3959     01E4  3004               	movlw	4
  3960     01E5                     u845:
  3961     01E5  1003               	clrc
  3962     01E6  0CF1               	rrf	??_Lcd_Write_Char,f
  3963     01E7  3EFF               	addlw	-1
  3964     01E8  1D03               	skipz
  3965     01E9  29E5               	goto	u845
  3966     01EA  0871               	movf	??_Lcd_Write_Char,w
  3967     01EB  120A  118A  2133  120A  118A  	fcall	_Lcd_Port
  3968     01F0                     l1474:
  3969                           
  3970                           ;LCD.c: 95:     PORTDbits.RD3 = 1;
  3971     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3972     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  3973     01F2  1588               	bsf	8,3	;volatile
  3974     01F3                     l1476:
  3975                           
  3976                           ;LCD.c: 96:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3977     01F3  301A               	movlw	26
  3978     01F4  00F1               	movwf	??_Lcd_Write_Char
  3979     01F5                     u1507:
  3980     01F5  0BF1               	decfsz	??_Lcd_Write_Char,f
  3981     01F6  29F5               	goto	u1507
  3982     01F7  0000               	nop
  3983     01F8                     l1478:
  3984                           
  3985                           ;LCD.c: 97:     PORTDbits.RD3 = 0;
  3986     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  3987     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  3988     01FA  1188               	bcf	8,3	;volatile
  3989     01FB                     l1480:
  3990                           
  3991                           ;LCD.c: 98:     Lcd_Port(temp);
  3992     01FB  0872               	movf	Lcd_Write_Char@temp,w
  3993     01FC  120A  118A  2133  120A  118A  	fcall	_Lcd_Port
  3994     0201                     l1482:
  3995                           
  3996                           ;LCD.c: 99:     PORTDbits.RD3 = 1;
  3997     0201  1283               	bcf	3,5	;RP0=0, select bank0
  3998     0202  1303               	bcf	3,6	;RP1=0, select bank0
  3999     0203  1588               	bsf	8,3	;volatile
  4000     0204                     l1484:
  4001                           
  4002                           ;LCD.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4003     0204  301A               	movlw	26
  4004     0205  00F1               	movwf	??_Lcd_Write_Char
  4005     0206                     u1517:
  4006     0206  0BF1               	decfsz	??_Lcd_Write_Char,f
  4007     0207  2A06               	goto	u1517
  4008     0208  0000               	nop
  4009     0209                     l1486:
  4010                           
  4011                           ;LCD.c: 101:     PORTDbits.RD3 = 0;
  4012     0209  1283               	bcf	3,5	;RP0=0, select bank0
  4013     020A  1303               	bcf	3,6	;RP1=0, select bank0
  4014     020B  1188               	bcf	8,3	;volatile
  4015     020C                     l255:
  4016     020C  0008               	return
  4017     020D                     __end_of_Lcd_Write_Char:
  4018                           
  4019                           	psect	text27
  4020     05CA                     __ptext27:	
  4021 ;; *************** function _Lcd_Set_Cursor *****************
  4022 ;; Defined at:
  4023 ;;		line 26 in file "LCD.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  a               1    wreg     unsigned char 
  4026 ;;  b               1    4[COMMON] unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  a               1    6[COMMON] unsigned char 
  4029 ;;  temp            1    9[COMMON] unsigned char 
  4030 ;;  y               1    8[COMMON] unsigned char 
  4031 ;;  z               1    7[COMMON] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         1       0       0       0       0
  4042 ;;      Locals:         4       0       0       0       0
  4043 ;;      Temps:          1       0       0       0       0
  4044 ;;      Totals:         6       0       0       0       0
  4045 ;;Total ram usage:        6 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 2
  4048 ;; This function calls:
  4049 ;;		_Lcd_Cmd
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055     05CA                     _Lcd_Set_Cursor:	
  4056                           ;psect for function _Lcd_Set_Cursor
  4057                           
  4058                           
  4059                           ;incstack = 0
  4060                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4061                           ;Lcd_Set_Cursor@a stored from wreg
  4062     05CA  00F6               	movwf	Lcd_Set_Cursor@a
  4063     05CB                     l1756:
  4064                           
  4065                           ;LCD.c: 26: void Lcd_Set_Cursor(char a, char b);LCD.c: 27: {;LCD.c: 28:     char temp,z,
      +                          y;;LCD.c: 29:     if(a == 1)
  4066     05CB  0376               	decf	Lcd_Set_Cursor@a,w
  4067     05CC  1D03               	btfss	3,2
  4068     05CD  2DCF               	goto	u1241
  4069     05CE  2DD0               	goto	u1240
  4070     05CF                     u1241:
  4071     05CF  2DED               	goto	l1766
  4072     05D0                     u1240:
  4073     05D0                     l1758:
  4074                           
  4075                           ;LCD.c: 30:     {;LCD.c: 31:         temp = 0x80 + b - 1;
  4076     05D0  0874               	movf	Lcd_Set_Cursor@b,w
  4077     05D1  3E7F               	addlw	127
  4078     05D2  00F9               	movwf	Lcd_Set_Cursor@temp
  4079                           
  4080                           ;LCD.c: 32:         z = temp>>4;
  4081     05D3  0879               	movf	Lcd_Set_Cursor@temp,w
  4082     05D4  00F5               	movwf	??_Lcd_Set_Cursor
  4083     05D5  3004               	movlw	4
  4084     05D6                     u1255:
  4085     05D6  1003               	clrc
  4086     05D7  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4087     05D8  3EFF               	addlw	-1
  4088     05D9  1D03               	skipz
  4089     05DA  2DD6               	goto	u1255
  4090     05DB  0875               	movf	??_Lcd_Set_Cursor,w
  4091     05DC  00F7               	movwf	Lcd_Set_Cursor@z
  4092     05DD                     l1760:
  4093                           
  4094                           ;LCD.c: 33:         y = temp & 0x0F;
  4095     05DD  0879               	movf	Lcd_Set_Cursor@temp,w
  4096     05DE  390F               	andlw	15
  4097     05DF  00F8               	movwf	Lcd_Set_Cursor@y
  4098     05E0                     l1762:
  4099                           
  4100                           ;LCD.c: 34:         Lcd_Cmd(z);
  4101     05E0  0877               	movf	Lcd_Set_Cursor@z,w
  4102     05E1  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4103     05E6                     l1764:
  4104                           
  4105                           ;LCD.c: 35:         Lcd_Cmd(y);
  4106     05E6  0878               	movf	Lcd_Set_Cursor@y,w
  4107     05E7  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4108                           
  4109                           ;LCD.c: 36:     }
  4110     05EC  2E56               	goto	l249
  4111     05ED                     l1766:
  4112     05ED  3002               	movlw	2
  4113     05EE  0676               	xorwf	Lcd_Set_Cursor@a,w
  4114     05EF  1D03               	btfss	3,2
  4115     05F0  2DF2               	goto	u1261
  4116     05F1  2DF3               	goto	u1260
  4117     05F2                     u1261:
  4118     05F2  2E10               	goto	l1776
  4119     05F3                     u1260:
  4120     05F3                     l1768:
  4121                           
  4122                           ;LCD.c: 38:     {;LCD.c: 39:         temp = 0xC0 + b - 1;
  4123     05F3  0874               	movf	Lcd_Set_Cursor@b,w
  4124     05F4  3EBF               	addlw	191
  4125     05F5  00F9               	movwf	Lcd_Set_Cursor@temp
  4126                           
  4127                           ;LCD.c: 40:         z = temp>>4;
  4128     05F6  0879               	movf	Lcd_Set_Cursor@temp,w
  4129     05F7  00F5               	movwf	??_Lcd_Set_Cursor
  4130     05F8  3004               	movlw	4
  4131     05F9                     u1275:
  4132     05F9  1003               	clrc
  4133     05FA  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4134     05FB  3EFF               	addlw	-1
  4135     05FC  1D03               	skipz
  4136     05FD  2DF9               	goto	u1275
  4137     05FE  0875               	movf	??_Lcd_Set_Cursor,w
  4138     05FF  00F7               	movwf	Lcd_Set_Cursor@z
  4139     0600                     l1770:
  4140                           
  4141                           ;LCD.c: 41:         y = temp & 0x0F;
  4142     0600  0879               	movf	Lcd_Set_Cursor@temp,w
  4143     0601  390F               	andlw	15
  4144     0602  00F8               	movwf	Lcd_Set_Cursor@y
  4145     0603                     l1772:
  4146                           
  4147                           ;LCD.c: 42:         Lcd_Cmd(z);
  4148     0603  0877               	movf	Lcd_Set_Cursor@z,w
  4149     0604  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4150     0609                     l1774:
  4151                           
  4152                           ;LCD.c: 43:         Lcd_Cmd(y);
  4153     0609  0878               	movf	Lcd_Set_Cursor@y,w
  4154     060A  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4155                           
  4156                           ;LCD.c: 44:     }
  4157     060F  2E56               	goto	l249
  4158     0610                     l1776:
  4159     0610  3003               	movlw	3
  4160     0611  0676               	xorwf	Lcd_Set_Cursor@a,w
  4161     0612  1D03               	btfss	3,2
  4162     0613  2E15               	goto	u1281
  4163     0614  2E16               	goto	u1280
  4164     0615                     u1281:
  4165     0615  2E33               	goto	l1786
  4166     0616                     u1280:
  4167     0616                     l1778:
  4168                           
  4169                           ;LCD.c: 46:     {;LCD.c: 47:         temp = 0x94 + b - 1;
  4170     0616  0874               	movf	Lcd_Set_Cursor@b,w
  4171     0617  3E93               	addlw	147
  4172     0618  00F9               	movwf	Lcd_Set_Cursor@temp
  4173                           
  4174                           ;LCD.c: 48:         z = temp>>4;
  4175     0619  0879               	movf	Lcd_Set_Cursor@temp,w
  4176     061A  00F5               	movwf	??_Lcd_Set_Cursor
  4177     061B  3004               	movlw	4
  4178     061C                     u1295:
  4179     061C  1003               	clrc
  4180     061D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4181     061E  3EFF               	addlw	-1
  4182     061F  1D03               	skipz
  4183     0620  2E1C               	goto	u1295
  4184     0621  0875               	movf	??_Lcd_Set_Cursor,w
  4185     0622  00F7               	movwf	Lcd_Set_Cursor@z
  4186     0623                     l1780:
  4187                           
  4188                           ;LCD.c: 49:         y = temp & 0x0F;
  4189     0623  0879               	movf	Lcd_Set_Cursor@temp,w
  4190     0624  390F               	andlw	15
  4191     0625  00F8               	movwf	Lcd_Set_Cursor@y
  4192     0626                     l1782:
  4193                           
  4194                           ;LCD.c: 50:         Lcd_Cmd(z);
  4195     0626  0877               	movf	Lcd_Set_Cursor@z,w
  4196     0627  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4197     062C                     l1784:
  4198                           
  4199                           ;LCD.c: 51:         Lcd_Cmd(y);
  4200     062C  0878               	movf	Lcd_Set_Cursor@y,w
  4201     062D  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4202                           
  4203                           ;LCD.c: 52:     }
  4204     0632  2E56               	goto	l249
  4205     0633                     l1786:
  4206     0633  3004               	movlw	4
  4207     0634  0676               	xorwf	Lcd_Set_Cursor@a,w
  4208     0635  1D03               	btfss	3,2
  4209     0636  2E38               	goto	u1301
  4210     0637  2E39               	goto	u1300
  4211     0638                     u1301:
  4212     0638  2E56               	goto	l245
  4213     0639                     u1300:
  4214     0639                     l1788:
  4215                           
  4216                           ;LCD.c: 54:     {;LCD.c: 55:         temp = 0xD4 + b - 1;
  4217     0639  0874               	movf	Lcd_Set_Cursor@b,w
  4218     063A  3ED3               	addlw	211
  4219     063B  00F9               	movwf	Lcd_Set_Cursor@temp
  4220                           
  4221                           ;LCD.c: 56:         z = temp>>4;
  4222     063C  0879               	movf	Lcd_Set_Cursor@temp,w
  4223     063D  00F5               	movwf	??_Lcd_Set_Cursor
  4224     063E  3004               	movlw	4
  4225     063F                     u1315:
  4226     063F  1003               	clrc
  4227     0640  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4228     0641  3EFF               	addlw	-1
  4229     0642  1D03               	skipz
  4230     0643  2E3F               	goto	u1315
  4231     0644  0875               	movf	??_Lcd_Set_Cursor,w
  4232     0645  00F7               	movwf	Lcd_Set_Cursor@z
  4233     0646                     l1790:
  4234                           
  4235                           ;LCD.c: 57:         y = temp & 0x0F;
  4236     0646  0879               	movf	Lcd_Set_Cursor@temp,w
  4237     0647  390F               	andlw	15
  4238     0648  00F8               	movwf	Lcd_Set_Cursor@y
  4239     0649                     l1792:
  4240                           
  4241                           ;LCD.c: 58:         Lcd_Cmd(z);
  4242     0649  0877               	movf	Lcd_Set_Cursor@z,w
  4243     064A  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4244     064F                     l1794:
  4245                           
  4246                           ;LCD.c: 59:         Lcd_Cmd(y);
  4247     064F  0878               	movf	Lcd_Set_Cursor@y,w
  4248     0650  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4249     0655  2E56               	goto	l249
  4250     0656                     l245:
  4251     0656                     l249:
  4252     0656  0008               	return
  4253     0657                     __end_of_Lcd_Set_Cursor:
  4254                           
  4255                           	psect	text28
  4256     04E9                     __ptext28:	
  4257 ;; *************** function _Lcd_Init *****************
  4258 ;; Defined at:
  4259 ;;		line 63 in file "LCD.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0
  4275 ;;      Temps:          2       0       0       0       0
  4276 ;;      Totals:         2       0       0       0       0
  4277 ;;Total ram usage:        2 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; Hardware stack levels required when called: 3
  4280 ;; This function calls:
  4281 ;;		_Lcd_Clear
  4282 ;;		_Lcd_Cmd
  4283 ;;		_Lcd_Port
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289     04E9                     _Lcd_Init:	
  4290                           ;psect for function _Lcd_Init
  4291                           
  4292     04E9                     l1744:	
  4293                           ;incstack = 0
  4294                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4295                           
  4296                           
  4297                           ;LCD.c: 65:  TRISDbits.TRISD2 = 0;
  4298     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  4299     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  4300     04EB  1108               	bcf	8,2	;volatile
  4301                           
  4302                           ;LCD.c: 66:  TRISDbits.TRISD3 = 0;
  4303     04EC  1188               	bcf	8,3	;volatile
  4304                           
  4305                           ;LCD.c: 67:  TRISDbits.TRISD4 = 0;
  4306     04ED  1208               	bcf	8,4	;volatile
  4307                           
  4308                           ;LCD.c: 68:  TRISDbits.TRISD5 = 0;
  4309     04EE  1288               	bcf	8,5	;volatile
  4310                           
  4311                           ;LCD.c: 69:  TRISDbits.TRISD6 = 0;
  4312     04EF  1308               	bcf	8,6	;volatile
  4313                           
  4314                           ;LCD.c: 70:  TRISDbits.TRISD7 = 0;
  4315     04F0  1388               	bcf	8,7	;volatile
  4316     04F1                     l1746:
  4317                           
  4318                           ;LCD.c: 71:     Lcd_Port(0x00);
  4319     04F1  3000               	movlw	0
  4320     04F2  120A  118A  2133  120A  118A  	fcall	_Lcd_Port
  4321     04F7                     l1748:
  4322                           
  4323                           ;LCD.c: 72:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4324     04F7  3027               	movlw	39
  4325     04F8  00F5               	movwf	??_Lcd_Init+1
  4326     04F9  30F5               	movlw	245
  4327     04FA  00F4               	movwf	??_Lcd_Init
  4328     04FB                     u1527:
  4329     04FB  0BF4               	decfsz	??_Lcd_Init,f
  4330     04FC  2CFB               	goto	u1527
  4331     04FD  0BF5               	decfsz	??_Lcd_Init+1,f
  4332     04FE  2CFB               	goto	u1527
  4333     04FF                     l1750:
  4334                           
  4335                           ;LCD.c: 73:     Lcd_Cmd(0x03);
  4336     04FF  3003               	movlw	3
  4337     0500  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4338                           
  4339                           ;LCD.c: 74:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4340     0505  300B               	movlw	11
  4341     0506  00F5               	movwf	??_Lcd_Init+1
  4342     0507  3062               	movlw	98
  4343     0508  00F4               	movwf	??_Lcd_Init
  4344     0509                     u1537:
  4345     0509  0BF4               	decfsz	??_Lcd_Init,f
  4346     050A  2D09               	goto	u1537
  4347     050B  0BF5               	decfsz	??_Lcd_Init+1,f
  4348     050C  2D09               	goto	u1537
  4349     050D  0000               	nop
  4350     050E                     l1752:
  4351                           
  4352                           ;LCD.c: 75:     Lcd_Cmd(0x03);
  4353     050E  3003               	movlw	3
  4354     050F  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4355     0514                     l1754:
  4356                           
  4357                           ;LCD.c: 76:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4358     0514  3042               	movlw	66
  4359     0515  00F4               	movwf	??_Lcd_Init
  4360     0516                     u1547:
  4361     0516  0BF4               	decfsz	??_Lcd_Init,f
  4362     0517  2D16               	goto	u1547
  4363     0518  0000               	nop
  4364                           
  4365                           ;LCD.c: 77:     Lcd_Cmd(0x03);
  4366     0519  3003               	movlw	3
  4367     051A  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4368                           
  4369                           ;LCD.c: 78:     Lcd_Cmd(0x02);
  4370     051F  3002               	movlw	2
  4371     0520  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4372                           
  4373                           ;LCD.c: 79:     Lcd_Cmd(0x02);
  4374     0525  3002               	movlw	2
  4375     0526  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4376                           
  4377                           ;LCD.c: 80:     Lcd_Cmd(0x08);
  4378     052B  3008               	movlw	8
  4379     052C  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4380                           
  4381                           ;LCD.c: 81:     Lcd_Cmd(0x00);
  4382     0531  3000               	movlw	0
  4383     0532  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4384                           
  4385                           ;LCD.c: 82:     Lcd_Cmd(0x0C);
  4386     0537  300C               	movlw	12
  4387     0538  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4388                           
  4389                           ;LCD.c: 83:     Lcd_Cmd(0x00);
  4390     053D  3000               	movlw	0
  4391     053E  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4392                           
  4393                           ;LCD.c: 84:     Lcd_Cmd(0x06);
  4394     0543  3006               	movlw	6
  4395     0544  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4396                           
  4397                           ;LCD.c: 85:     Lcd_Clear();
  4398     0549  120A  118A  2091  120A  118A  	fcall	_Lcd_Clear
  4399     054E                     l252:
  4400     054E  0008               	return
  4401     054F                     __end_of_Lcd_Init:
  4402                           
  4403                           	psect	text29
  4404     0091                     __ptext29:	
  4405 ;; *************** function _Lcd_Clear *****************
  4406 ;; Defined at:
  4407 ;;		line 20 in file "LCD.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 2
  4428 ;; This function calls:
  4429 ;;		_Lcd_Cmd
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;;		_Lcd_Init
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436     0091                     _Lcd_Clear:	
  4437                           ;psect for function _Lcd_Clear
  4438                           
  4439     0091                     l1572:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4442                           
  4443                           
  4444                           ;LCD.c: 22:     Lcd_Cmd(0);
  4445     0091  3000               	movlw	0
  4446     0092  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4447                           
  4448                           ;LCD.c: 23:     Lcd_Cmd(1);
  4449     0097  3001               	movlw	1
  4450     0098  120A  118A  20DF  120A  118A  	fcall	_Lcd_Cmd
  4451     009D                     l239:
  4452     009D  0008               	return
  4453     009E                     __end_of_Lcd_Clear:
  4454                           
  4455                           	psect	text30
  4456     00DF                     __ptext30:	
  4457 ;; *************** function _Lcd_Cmd *****************
  4458 ;; Defined at:
  4459 ;;		line 11 in file "LCD.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  a               1    wreg     unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  a               1    3[COMMON] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0, pclath, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       0       0       0       0
  4474 ;;      Locals:         1       0       0       0       0
  4475 ;;      Temps:          2       0       0       0       0
  4476 ;;      Totals:         3       0       0       0       0
  4477 ;;Total ram usage:        3 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 1
  4480 ;; This function calls:
  4481 ;;		_Lcd_Port
  4482 ;; This function is called by:
  4483 ;;		_Lcd_Clear
  4484 ;;		_Lcd_Set_Cursor
  4485 ;;		_Lcd_Init
  4486 ;;		_Lcd_Shift_Right
  4487 ;;		_Lcd_Shift_Left
  4488 ;;		_Lcd_Blink
  4489 ;;		_Lcd_NoBlink
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493     00DF                     _Lcd_Cmd:	
  4494                           ;psect for function _Lcd_Cmd
  4495                           
  4496                           
  4497                           ;incstack = 0
  4498                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4499                           ;Lcd_Cmd@a stored from wreg
  4500     00DF  00F3               	movwf	Lcd_Cmd@a
  4501     00E0                     l1488:
  4502                           
  4503                           ;LCD.c: 11: void Lcd_Cmd(char a);LCD.c: 12: {;LCD.c: 13:     PORTDbits.RD2 = 0;
  4504     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  4505     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  4506     00E2  1108               	bcf	8,2	;volatile
  4507     00E3                     l1490:
  4508                           
  4509                           ;LCD.c: 14:     Lcd_Port(a);
  4510     00E3  0873               	movf	Lcd_Cmd@a,w
  4511     00E4  120A  118A  2133  120A  118A  	fcall	_Lcd_Port
  4512     00E9                     l1492:
  4513                           
  4514                           ;LCD.c: 15:     PORTDbits.RD3 = 1;
  4515     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  4516     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  4517     00EB  1588               	bsf	8,3	;volatile
  4518     00EC                     l1494:
  4519                           
  4520                           ;LCD.c: 16:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4521     00EC  300B               	movlw	11
  4522     00ED  00F2               	movwf	??_Lcd_Cmd+1
  4523     00EE  3062               	movlw	98
  4524     00EF  00F1               	movwf	??_Lcd_Cmd
  4525     00F0                     u1557:
  4526     00F0  0BF1               	decfsz	??_Lcd_Cmd,f
  4527     00F1  28F0               	goto	u1557
  4528     00F2  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4529     00F3  28F0               	goto	u1557
  4530     00F4  0000               	nop
  4531     00F5                     l1496:
  4532                           
  4533                           ;LCD.c: 17:     PORTDbits.RD3 = 0;
  4534     00F5  1283               	bcf	3,5	;RP0=0, select bank0
  4535     00F6  1303               	bcf	3,6	;RP1=0, select bank0
  4536     00F7  1188               	bcf	8,3	;volatile
  4537     00F8                     l236:
  4538     00F8  0008               	return
  4539     00F9                     __end_of_Lcd_Cmd:
  4540                           
  4541                           	psect	text31
  4542     0133                     __ptext31:	
  4543 ;; *************** function _Lcd_Port *****************
  4544 ;; Defined at:
  4545 ;;		line 3 in file "LCD.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  a               1    wreg     unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  a               1    0[COMMON] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         0       0       0       0       0
  4560 ;;      Locals:         1       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0
  4562 ;;      Totals:         1       0       0       0       0
  4563 ;;Total ram usage:        1 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_Lcd_Cmd
  4569 ;;		_Lcd_Init
  4570 ;;		_Lcd_Write_Char
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574     0133                     _Lcd_Port:	
  4575                           ;psect for function _Lcd_Port
  4576                           
  4577                           
  4578                           ;incstack = 0
  4579                           ; Regs used in _Lcd_Port: [wreg]
  4580                           ;Lcd_Port@a stored from wreg
  4581     0133  00F0               	movwf	Lcd_Port@a
  4582     0134                     l1436:
  4583                           
  4584                           ;LCD.c: 3: void Lcd_Port(char a);LCD.c: 4: {;LCD.c: 5:     (a & 1) ? (PORTDbits.RD4 = 1)
      +                           : (PORTDbits.RD4 = 0);
  4585     0134  1C70               	btfss	Lcd_Port@a,0
  4586     0135  2937               	goto	u731
  4587     0136  2938               	goto	u730
  4588     0137                     u731:
  4589     0137  293C               	goto	l218
  4590     0138                     u730:
  4591     0138                     l1438:
  4592     0138  1283               	bcf	3,5	;RP0=0, select bank0
  4593     0139  1303               	bcf	3,6	;RP1=0, select bank0
  4594     013A  1608               	bsf	8,4	;volatile
  4595     013B  293F               	goto	l220
  4596     013C                     l218:
  4597     013C  1283               	bcf	3,5	;RP0=0, select bank0
  4598     013D  1303               	bcf	3,6	;RP1=0, select bank0
  4599     013E  1208               	bcf	8,4	;volatile
  4600     013F                     l220:
  4601                           
  4602                           ;LCD.c: 6:     (a & 2) ? (PORTDbits.RD5 = 1) : (PORTDbits.RD5 = 0);
  4603     013F  1CF0               	btfss	Lcd_Port@a,1
  4604     0140  2942               	goto	u741
  4605     0141  2943               	goto	u740
  4606     0142                     u741:
  4607     0142  2945               	goto	l222
  4608     0143                     u740:
  4609     0143                     l1440:
  4610     0143  1688               	bsf	8,5	;volatile
  4611     0144  2946               	goto	l224
  4612     0145                     l222:
  4613     0145  1288               	bcf	8,5	;volatile
  4614     0146                     l224:
  4615                           
  4616                           ;LCD.c: 7:     (a & 4) ? (PORTDbits.RD6 = 1) : (PORTDbits.RD6 = 0);
  4617     0146  1D70               	btfss	Lcd_Port@a,2
  4618     0147  2949               	goto	u751
  4619     0148  294A               	goto	u750
  4620     0149                     u751:
  4621     0149  294C               	goto	l226
  4622     014A                     u750:
  4623     014A                     l1442:
  4624     014A  1708               	bsf	8,6	;volatile
  4625     014B  294D               	goto	l228
  4626     014C                     l226:
  4627     014C  1308               	bcf	8,6	;volatile
  4628     014D                     l228:
  4629                           
  4630                           ;LCD.c: 8:     (a & 8) ? (PORTDbits.RD7 = 1) : (PORTDbits.RD7 = 0);
  4631     014D  1DF0               	btfss	Lcd_Port@a,3
  4632     014E  2950               	goto	u761
  4633     014F  2951               	goto	u760
  4634     0150                     u761:
  4635     0150  2953               	goto	l230
  4636     0151                     u760:
  4637     0151                     l1444:
  4638     0151  1788               	bsf	8,7	;volatile
  4639     0152  2954               	goto	l233
  4640     0153                     l230:
  4641     0153  1388               	bcf	8,7	;volatile
  4642     0154                     l233:
  4643     0154  0008               	return
  4644     0155                     __end_of_Lcd_Port:
  4645     007E                     btemp	set	126	;btemp
  4646     007E                     wtemp0	set	126
  4647                           
  4648                           	psect	idloc
  4649                           
  4650                           ;Config register IDLOC0 @ 0x2000
  4651                           ;	unspecified, using default values
  4652     2000                     	org	8192
  4653     2000  3FFF               	dw	16383
  4654                           
  4655                           ;Config register IDLOC1 @ 0x2001
  4656                           ;	unspecified, using default values
  4657     2001                     	org	8193
  4658     2001  3FFF               	dw	16383
  4659                           
  4660                           ;Config register IDLOC2 @ 0x2002
  4661                           ;	unspecified, using default values
  4662     2002                     	org	8194
  4663     2002  3FFF               	dw	16383
  4664                           
  4665                           ;Config register IDLOC3 @ 0x2003
  4666                           ;	unspecified, using default values
  4667     2003                     	org	8195
  4668     2003  3FFF               	dw	16383
  4669                           
  4670                           	psect	config
  4671                           
  4672                           ;Config register CONFIG1 @ 0x2007
  4673                           ;	Oscillator Selection bits
  4674                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4675                           ;	Watchdog Timer Enable bit
  4676                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4677                           ;	Power-up Timer Enable bit
  4678                           ;	PWRTE = OFF, PWRT disabled
  4679                           ;	RE3/MCLR pin function select bit
  4680                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4681                           ;	Code Protection bit
  4682                           ;	CP = OFF, Program memory code protection is disabled
  4683                           ;	Data Code Protection bit
  4684                           ;	CPD = OFF, Data memory code protection is disabled
  4685                           ;	Brown Out Reset Selection bits
  4686                           ;	BOREN = OFF, BOR disabled
  4687                           ;	Internal External Switchover bit
  4688                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4689                           ;	Fail-Safe Clock Monitor Enabled bit
  4690                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4691                           ;	Low Voltage Programming Enable bit
  4692                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4693                           ;	In-Circuit Debugger Mode bit
  4694                           ;	DEBUG = 0x1, unprogramme  4695     2007                     	org	8199
  4696     2007  20D4               	dw	8404
  4697                           
  4698                           ;Config register CONFIG2 @ 0x2008
  4699                           ;	Brown-out Reset Selection bit
  4700                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4701                           ;	Flash Program Memory Self Write Enable bits
  4702                           ;	WRT = OFF, Write protection off
  4703     2008                     	org	8200
  4704     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    10
    Data        14
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 7
		 -> Fecha(BANK0[7]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[3]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Fecha(BANK0[7]), buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Init_Master
    _mostrar_hora->_Lcd_Write_Char
    _leer_hora->_I2C_Write
    _enviar_hora->_I2C_Write
    _configuracion->_atoi
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _mostrar_fecha->_Lcd_Write_Char
    _leer_fecha->_I2C_Write
    _enviar_fecha->_I2C_Write
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_configuracion
    _configuracion->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5856
                                             17 BANK0      3     3      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _configuracion
                     _convertirFecha
                      _convertirHora
                       _enviar_fecha
                        _enviar_hora
                         _leer_fecha
                          _leer_hora
                      _mostrar_fecha
                       _mostrar_hora
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mostrar_hora                                         1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            0     0      0      29
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _enviar_hora                                          0     0      0      29
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _convertirHora                                        2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        4     4      0    2131
                                             13 BANK0      4     4      0
                               _atoi
                     _convertirFecha
                       _enviar_fecha
                         _leer_fecha
                      _mostrar_fecha
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1230
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _mostrar_fecha                                        1     1      0     178
                                              5 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _leer_fecha                                           0     0      0      29
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar_fecha                                         0     0      0      29
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convertirFecha                                       2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     954
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     308
                                              4 COMMON     2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _configuracion
     _atoi
       ___wmul
       _isdigit
     _convertirFecha
     _enviar_fecha
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _leer_fecha
       _I2C_Ack
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _mostrar_fecha
       _Lcd_Write_Char
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _convertirFecha
   _convertirHora
   _enviar_fecha
   _enviar_hora
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _leer_fecha
   _leer_hora
     _I2C_Ack
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _mostrar_fecha
   _mostrar_hora
     _Lcd_Write_Char
   _setup
     _I2C_Init_Master
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 23:46:03 2023

                       pc 0002            ?_configuracion 0070                        fsr 0004  
     ___wmul@multiplicand 0072                       l112 027A                       l120 01D7  
                     l201 00A7                       l202 00AB                       l123 03CC  
                     l107 0113                       l220 013F                       l140 049D  
                     l132 0488                       l117 0243                       l205 0089  
                     l230 0153                       l222 0145                       l126 01A8  
                     l207 008E                       l135 042A                       l224 0146  
                     l208 0090                       l144 04E8                       l233 0154  
                     l129 0383                       l226 014C                       l218 013C  
                     l171 005A                       l228 014D                       l236 00F8  
                     l252 054E                       l172 005B                       l245 0656  
                     l261 02F6                       l181 0069                       l190 007A  
                     l166 0132                       l239 009D                       l255 020C  
                     l175 005F                       l183 006E                       _ADC 0028  
                     l184 006F                       l249 0656                       l169 0055  
                     l177 0064                       l193 007F                       l178 0065  
                     l187 0074                       l195 0084                       l196 0085  
                     l380 0717                       l189 0079                       l199 00A3  
                     l384 0161                       l386 0179                       l656 033A  
                     l666 02B4                       l852 00CB                       l847 05C9  
                     u800 0064                       u801 0063                       u730 0138  
                     u810 006E                       u731 0137                       u811 006D  
                     u740 0143                       u820 0079                       u741 0142  
                     u821 0078                       u750 014A                       u830 0084  
                     u910 0311                       u751 0149                       u831 0083  
                     u911 0310                       u760 0151                       u761 0150  
                     u905 0303                       u850 015B                       u770 005A  
                     u930 0322                       u851 015A                       u771 0059  
                     u931 0321                       u780 00A7                       u845 01E5  
                     u781 00A6                       u925 0312                       u790 008E  
                     u950 0336                       u791 008D                       u951 0335  
                     u935 031E                       u880 0175                       u960 0281  
                     u881 0174                       u865 0162                       u945 032A  
                     u961 0280                       u890 02FF                       u875 0169  
                     u891 02FE                       u980 0293                       u981 0292  
                     u990 029D                       u991 029C                       u975 0285  
                     u995 0299                       _dia 0024           __end_of_I2C_Ack 007B  
                     _mes 0023                       _min 0026                       _sec 0027  
                     fsr0 0004                       indf 0000           ??_mostrar_fecha 0075  
                    l1500 0157                      l1502 015B                      l1440 0143  
                    l1504 0168                      l1600 01A3                      l1520 0309  
                    l1512 02F7                      l1442 014A                      l1506 016F  
                    l1450 00A8                      l1530 0329                      l1522 030D  
                    l1514 02F9                      l1610 066D                      l1602 065A  
                    l1444 0151                      l1436 0134                      l1508 0175  
                    l1700 0566                      l1460 005C                      l1532 0330  
                    l1524 0311                      l1516 02FF                      l1540 0281  
                    l1620 0696                      l1612 066F                      l1604 065D  
                    l1438 0138                      l1470 01DF                      l1710 0587  
                    l1702 0569                      l1446 0052                      l1454 0086  
                    l1462 0066                      l1526 0322                      l1518 0302  
                    l1534 0336                      l1550 029D                      l1542 0284  
                    l1622 069A                      l1606 0663                      l1480 01FB  
                    l1472 01E2                      l1800 02D4                      l1560 00BB  
                    l1704 0571                      l1448 009F                      l1464 0070  
                    l1456 008F                      l1528 0328                      l1552 02A3  
                    l1544 028B                      l1640 06F6                      l1632 06B8  
                    l1616 0674                      l1608 0668                      l1490 00E3  
                    l1482 0201                      l1474 01F0                      l1802 02DA  
                    l1562 00BC                      l1722 05C5                      l1714 05A8  
                    l1706 057A                      l1466 007B                      l1554 02AA  
                    l1546 028F                      l1538 027B                      l1642 06FA  
                    l1634 06C2                      l1618 068E                      l1810 0245  
                    l1730 0103                      l1492 00E9                      l1572 0091  
                    l1484 0204                      l1476 01F3                      l1468 01D9  
                    l1564 00C2                      l1716 05B4                      l1708 0582  
                    l1580 020E                      l1660 0351                      l1548 0293  
                    l1556 02B0                      l1636 06C5                      l1628 069C  
                    l1644 0703                      l1812 024D                      l1804 0244  
                    l1820 01AE                      l1740 010C                      l1732 0106  
                    l1900 075F                      l1494 00EC                      l1750 04FF  
                    l1486 0209                      l1478 01F8                      l1566 00C8  
                    l1718 05B9                      l1582 0216                      l1574 020D  
                    l1590 017F                      l1670 0371                      l1662 0357  
                    l1654 033B                      l1638 06F1                      l1646 0713  
                    l1814 0251                      l1830 01D2                      l1822 01B4  
                    l1742 010D                      l1734 0107                      l1726 00F9  
                    l1910 077E                      l1902 0765                      l1496 00F5  
                    l1488 00E0                      l1752 050E                      l1744 04E9  
                    l1760 05DD                      l1568 00CA                      l1584 021A  
                    l1592 0185                      l1672 0379                      l1664 035F  
                    l1656 0340                      l1816 0257                      l1824 01BA  
                    l1840 03A0                      l1832 0384                      l1680 0119  
                    l1736 0108                      l1728 0101                      l1920 07B2  
                    l1912 0786                      l1904 076D                      l1754 0514  
                    l1746 04F1                      l1770 0600                      l1762 05E0  
                    l1498 0155                      l1586 0220                      l1594 018B  
                    l1674 037E                      l1666 0364                      l1658 0346  
                    l1826 01C2                      l1818 01A9                      l1850 03C2  
                    l1842 03A8                      l1834 0389                      l1690 0130  
                    l1682 011F                      l1738 010B                      l1930 07CE  
                    l1922 07B7                      l1914 0797                      l1906 076F  
                    l1748 04F7                      l1780 0623                      l1772 0603  
                    l1764 05E6                      l1756 05CB                      l1692 0550  
                    l1596 0193                      l1588 017A                      l1668 036C  
                    l1676 03CD                      l1860 0495                      l1828 01CA  
                    l1852 03C7                      l1844 03AD                      l1836 038F  
                    l1684 0122                      l1932 07DD                      l1924 07BC  
                    l1916 07A0                      l1908 0774                      l1790 0646  
                    l1782 0626                      l1774 0609                      l1758 05D0  
                    l1766 05ED                      l1694 0551                      l1598 019B  
                    l1870 04C9                      l1862 04A1                      l1846 03B5  
                    l1838 039A                      l1854 042B                      l1686 0128  
                    l1678 0115                      l1926 07C4                      l1918 07AA  
                    l1792 0649                      l1784 062C                      l1768 05F3  
                    l1776 0610                      l1696 0555                      l1880 04E3  
                    l1872 04CE                      l1864 04AB                      l1856 0489  
                    l1848 03BA                      l1688 012B                      l1928 07C9  
                    l1794 064F                      l1778 0616                      l1786 0633  
                    l1698 055E                      l1962 0686                      l1874 04D3  
                    l1866 04B7                      l1858 0491                      l1890 0746  
                    l1882 0718                      l1788 0639                      l1796 02B5  
                    l1876 04D8                      l1868 04BD                      l1892 074B  
                    l1884 072F                      l1798 02B8                      l1878 04DE  
                    l1894 0750                      l1886 0738                      l1896 0755  
                    l1888 0742                      l1898 075A                      STR_1 0023  
                    STR_2 001D                      STR_3 0028                      u1010 02B0  
                    u1011 02AF                      u1020 00C2                      u1100 06C2  
                    u1021 00C1                      u1005 02A4                      u1101 06C1  
                    u1030 00C8                      u1110 0703                      u1031 00C7  
                    u1111 0702                      u1200 0571                      u1040 0220  
                    u1120 0713                      u1201 0570                      u1041 021F  
                    u1121 0712                      u1210 0582                      u1211 0581  
                    u1300 0639                      u1220 05B4                      u1301 0638  
                    u1221 05B3                      u1230 05B9                      u1231 05B8  
                    u1055 0225                      u1135 03D2                      u1240 05D0  
                    u1320 02C2                      u1080 0663                      u1160 0128  
                    u1241 05CF                      u1065 0230                      u1145 03F3  
                    u1081 0662                      u1161 0127                      u1330 02E4  
                    u1090 06B7                      u1170 0130                      u1315 063F  
                    u1075 023B                      u1155 0414                      u1091 06B6  
                    u1171 012F                      u1260 05F3                      u1340 02F6  
                    u1180 055E                      u1420 0491                      u1261 05F2  
                    u1341 02F5                      u1181 055D                      u1421 0490  
                    u1405 0451                      u1190 0566                      u1430 0495  
                    u1350 0257                      u1255 05D6                      u1191 0565  
                    u1095 06B3                      u1431 0494                      u1351 0256  
                    u1415 0472                      u1280 0616                      u1440 04A1  
                    u1281 0615                      u1441 04A0                      u1275 05F9  
                    u1507 01F5                      u1517 0206                      u1365 025C  
                    u1527 04FB                      u1295 061C                      u1375 0267  
                    u1537 0509                      u1385 0272                      u1457 073E  
                    u1547 0516                      u1395 0430                      u1467 077A  
                    u1557 00F0                      u1477 07A6                      u1487 07D6  
                    u1497 04A7                      _Hora 0051         ?_Lcd_Write_String 0075  
                    _caso 0020                      _anio 0022                      _atoi 054F  
                    _main 0718                      _hora 0025          __end_of_I2C_Nack 0086  
        __end_of_I2C_Read 0091                      btemp 007E          __end_of_I2C_Stop 0066  
                    start 0000        ??_Lcd_Write_String 0077          ?_I2C_Init_Master 0070  
            ?_enviar_hora 0070           __end_of_Lcd_Cmd 00F9                     ?_atoi 0076  
                   ?_main 0070             _convertirHora 0244                     _ANSEL 0188  
         __end_of___lwdiv 033B           __end_of___lwmod 02B5                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     _TRISB 0086  
                   _TRISD 0088                     _TRISE 0089                     _Fecha 0058  
         __end_of_dpowers 001D           __end_of_isdigit 00CC                     atoi@a 007B  
                   _setup 00F9                     atoi@s 007D         __end_of_I2C_Start 005C  
       __end_of_I2C_Write 00AC                     pclath 000A             ?_enviar_fecha 0070  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0718  
        __end_of_Lcd_Init 054F          __end_of_Lcd_Port 0155           __initialization 07E6  
            __end_of_atoi 05CA              __end_of_main 07E6           ??_configuracion 004A  
               ??_I2C_Ack 0070            ?_convertirHora 0070                    ??_atoi 0078  
                  ??_main 004E                    _ADCON1 009F            _convertirFecha 020D  
                  ?_setup 0070                    _ANSELH 0189            ??_enviar_fecha 0071  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013                    ___wmul 0155                 ??___lwdiv 0074  
               ??___lwmod 007C                    _buffer 0029                 ?_I2C_Nack 0070  
               ??_isdigit 0070                 ?_I2C_Read 0070                 ?_I2C_Stop 0070  
  __end_of_convertirFecha 0244                 ??_sprintf 0040           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 009E            __pcstackCOMMON 0070  
            __pidataBANK0 00AC           ??_convertirHora 0070             __end_of_setup 0114  
          _Lcd_Set_Cursor 05CA                ??_I2C_Nack 0070                ??_I2C_Read 0070  
              ??_I2C_Stop 0070           ?_convertirFecha 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0071                __pbssBANK0 0020  
              __pmaintext 0718                   ?___wmul 0070                   _I2C_Ack 0070  
  __end_of_Lcd_Set_Cursor 0657      __end_of_enviar_fecha 01A9             ??_I2C_Restart 0070  
              ??_Lcd_Init 0074          configuracion@num 004C                ??_Lcd_Port 0070  
                 _SSPCON2 0091     __end_of_mostrar_fecha 042B                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 01D8                   _Lcd_Cmd 00DF  
              _leer_fecha 033B                 _I2C_Start 0052                 _I2C_Write 009E  
                 ___lwdiv 02F7                   ___lwmod 027B         __end_of_leer_hora 03CD  
         ?_Lcd_Set_Cursor 0074                   __ptext1 00F9                   __ptext2 0114  
                 __ptext3 042B                   __ptext4 0384                   __ptext5 01A9  
                 __ptext6 0244                   __ptext7 0489                   __ptext8 0657  
                 __ptext9 027B                   _dpowers 0013                   _isdigit 00BA  
                 _sprintf 0657                   clrloop0 004B       __end_of_I2C_Restart 0070  
  __end_of_Lcd_Write_Char 020D      end_of_initialization 07FC             ?_mostrar_hora 0070  
              ?_I2C_Start 0070                ?_I2C_Write 0070                 Lcd_Port@a 0070  
   __end_of_configuracion 04E9                 _PORTDbits 0008                 _PORTEbits 0009  
               _TRISCbits 0087                 _TRISDbits 0088           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A            ??_mostrar_hora 0075  
             ?_leer_fecha 0070                 _Lcd_Clear 0091            __end_of___wmul 017A  
        _Lcd_Write_String 02B5          ??_convertirFecha 0070               _I2C_Restart 0066  
     start_initialization 07E6         ??_I2C_Init_Master 0070     I2C_Init_Master@sp_i2c 0070  
            _enviar_fecha 017A               ??_I2C_Start 0070               ??_I2C_Write 0070  
           ??_enviar_hora 0071                ?_Lcd_Clear 0070                  ??___wmul 0074  
              init_fetch0 00CC               __pdataBANK0 0051                  ?_I2C_Ack 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073     __end_of_convertirHora 027B  
               ___latbits 0002             __pcstackBANK0 003D                  ?_Lcd_Cmd 0070  
             sprintf@flag 0043               sprintf@prec 0047          ___lwdiv@dividend 0072  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0078  
     __end_of_enviar_hora 01D8                 __pstrings 0003      __end_of_mostrar_hora 0489  
                _I2C_Nack 007B                  ?_isdigit 0070                  _I2C_Read 0086  
               _leer_hora 0384                  _I2C_Stop 005C          ___lwdiv@quotient 0075  
                ?_sprintf 003D            ___wmul@product 0074                 clear_ram0 004A  
                Lcd_Cmd@a 0073                  _PIR1bits 000C               ??_Lcd_Clear 0074  
             __stringbase 0012         ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071  
              ?_leer_hora 0070                  _Lcd_Init 04E9                  _Lcd_Port 0133  
         convertirFecha@i 0071  __end_of_Lcd_Write_String 02F7              ??_leer_fecha 0071  
             _enviar_hora 01A9           _I2C_Init_Master 0114             I2C_Write@data 0070  
      __end_of__stringtab 0013               _isdigit$888 0070              ?_I2C_Restart 0070  
              sprintf@val 0045        __end_of_leer_fecha 0384           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 02F7                  __ptext11 03CD  
                __ptext20 0052                  __ptext12 033B                  __ptext21 020D  
                __ptext13 0066                  __ptext30 00DF                  __ptext22 054F  
                __ptext14 0086                  __ptext31 0133                  __ptext23 00BA  
                __ptext15 007B                  __ptext24 0155                  __ptext16 0070  
                __ptext25 02B5                  __ptext17 017A                  __ptext26 01D8  
                __ptext18 009E                  __ptext27 05CA                  __ptext19 005C  
                __ptext28 04E9                  __ptext29 0091             _mostrar_fecha 03CD  
                atoi@sign 007A            convertirHora@i 0071               ??_leer_hora 0071  
                init_ram0 00D0                  isdigit@c 0071            ?_mostrar_fecha 0070  
      Lcd_Write_Char@temp 0072                 sprintf@ap 0044                 sprintf@sp 0048  
        ___lwmod@dividend 007A              _mostrar_hora 042B   __end_of_I2C_Init_Master 0133  
               stringcode 000D                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
           _configuracion 0489                  sprintf@c 0049                  sprintf@f 003D  
         ___lwmod@divisor 0078           ___lwmod@counter 007D                  stringdir 000D  
                stringtab 0003               _SSPCON2bits 0091  
